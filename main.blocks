<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable type="KIND_SpriteKind" id="yoj0,MfN@h%/6^i[*fac">gemsPlayer</variable><variable type="KIND_SpriteKind" id="$RF8Quo1j!0#8=Gty|h}">gemsCatcher</variable><variable type="KIND_SpriteKind" id="Tcsn#2ejmqxa*^x{boS2">gems</variable><variable type="KIND_SpriteKind" id="3^H7{xcj}VjEf0X,lz3{">getGemsKind</variable><variable type="KIND_SpriteKind" id="l7Aw*YptB[*`R$o[NLwY">gemsKind</variable><variable type="KIND_SpriteKind" id="J@0X@?wn1HFASh6/yuIr">iceMagic</variable><variable type="KIND_SpriteKind" id="k-dsM;Oml(7~B493C;-G">fireMagic</variable></variables><block type="pxt-on-start" id="e)sDC(q).GlREwsc;iFZ" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="$BAg-IL_{#!rV+^;chkf" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace getgems {" line1="" line2="//角色碰到障碍物回退" line3="function goBack(){" line4=" if (heroDirection == 3) {" line5="        heroCol += -1" line6="    } else if (heroDirection == 0) {" line7="        heroRow += -1" line8="    } else if (heroDirection == 1) {" line9="        heroCol += 1" line10="    } else if (heroDirection == 2) {" line11="        heroRow += 1" line12="    }" line13="    scene.cameraShake(4, 500)" line14="    tiles.placeOnTile(gemsHero, tiles.getTileLocation(heroCol, heroRow))" line15="}" line16="" line17="//事件注册" line18="//魔法消除障碍物碰撞事件" line19="scene.onOverlapTile(SpriteKind.fireMagic, img`" line20="    . . . . . . c c . . . . . c c ." line21="    . . . c c . c 3 c . c c . c 3 c" line22="    . . c 3 6 c 3 3 c . c 3 c 6 3 c" line23="    . . c 3 3 3 3 6 c . c 3 6 3 3 c" line24="    . . . c 6 3 6 6 c c c 3 3 3 c ." line25="    . . . . c c 6 6 c 6 c 6 3 3 c ." line26="    . . . . c 3 c 6 c 3 3 c 6 6 c ." line27="    c c . c 3 3 c c c c 3 3 c 6 c ." line28="    c 3 c c 3 6 6 c 3 c 3 6 c 6 c ." line29="    c 3 3 6 3 6 3 6 3 3 3 c c c c c" line30="    . c 3 3 3 c 3 3 6 3 6 c c 3 3 c" line31="    . . c 3 3 c c 3 3 3 6 c 3 3 6 ." line32="    c c c 6 3 6 c c 6 3 6 6 3 6 c c" line33="    c 3 3 3 3 3 c c c 3 6 3 3 3 3 c" line34="    . c c 6 6 3 6 6 c 6 3 3 6 c c ." line35="    . . . c 6 3 3 6 6 6 6 3 c . . ." line36="`, function(sprite: Sprite, location: tiles.Location) {" line37="    tiles.setTileAt(tiles.getTileLocation(location.col,location.row), img`" line38="        . . . . . . . . . . . . . . . ." line39="        . . . . . . . . . . . . . . . ." line40="        . . . . . . . . . . . . . . . ." line41="        . . . . . . . . . . . . . . . ." line42="        . . . . . . . . . . . . . . . ." line43="        . . . . . . . . . . . . . . . ." line44="        . . . . . . . . . . . . . . . ." line45="        . . . . . . . . . . . . . . . ." line46="        . . . . . . . . . . . . . . . ." line47="        . . . . . . . . . . . . . . . ." line48="        . . . . . . . . . . . . . . . ." line49="        . . . . . . . . . . . . . . . ." line50="        . . . . . . . . . . . . . . . ." line51="        . . . . . . . . . . . . . . . ." line52="        . . . . . . . . . . . . . . . ." line53="        . . . . . . . . . . . . . . . ." line54="    `)" line55="})" line56="scene.onOverlapTile(SpriteKind.iceMagic, img`" line57="    5 4 4 5 5 4 4 4 4 2 2 2 4 4 4 4" line58="    4 4 4 4 4 5 5 4 2 2 2 2 4 4 4 5" line59="    4 2 2 2 4 4 5 4 2 2 4 4 5 5 5 5" line60="    2 2 4 2 4 4 5 4 2 2 4 5 5 5 5 4" line61="    2 2 2 2 4 4 5 4 2 2 4 4 5 5 4 4" line62="    4 2 2 2 4 5 5 4 4 4 4 4 4 4 4 2" line63="    2 2 2 4 4 5 5 5 4 4 2 2 2 2 2 2" line64="    4 2 2 4 5 5 5 5 4 2 2 4 2 2 2 4" line65="    5 4 4 4 4 4 4 5 5 4 2 2 2 4 4 4" line66="    4 4 4 2 2 2 4 4 5 5 4 4 4 4 5 5" line67="    4 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5" line68="    5 4 4 2 4 2 2 4 4 5 5 5 4 4 4 5" line69="    5 5 4 2 2 2 4 4 4 5 5 4 2 2 2 4" line70="    4 5 4 4 4 4 5 5 5 5 4 2 4 2 2 4" line71="    4 5 5 5 5 5 5 4 4 4 2 4 2 4 2 4" line72="    4 5 5 5 4 4 4 4 2 2 2 2 4 2 4 4" line73="`, function(sprite: Sprite, location: tiles.Location) {" line74="    tiles.setTileAt(tiles.getTileLocation(location.col,location.row), img`" line75="        . . . . . . . . . . . . . . . ." line76="        . . . . . . . . . . . . . . . ." line77="        . . . . . . . . . . . . . . . ." line78="        . . . . . . . . . . . . . . . ." line79="        . . . . . . . . . . . . . . . ." line80="        . . . . . . . . . . . . . . . ." line81="        . . . . . . . . . . . . . . . ." line82="        . . . . . . . . . . . . . . . ." line83="        . . . . . . . . . . . . . . . ." line84="        . . . . . . . . . . . . . . . ." line85="        . . . . . . . . . . . . . . . ." line86="        . . . . . . . . . . . . . . . ." line87="        . . . . . . . . . . . . . . . ." line88="        . . . . . . . . . . . . . . . ." line89="        . . . . . . . . . . . . . . . ." line90="        . . . . . . . . . . . . . . . ." line91="    `)" line92="})" line93="" line94="//碰到墙回退" line95="scene.onOverlapTile(SpriteKind.gemsPlayer, sprites.builtin.forestTiles0, function (sprite, location) {" line96="   pause(500) " line97="   goBack()" line98="" line99="})" line100="//碰到熔岩" line101="scene.onOverlapTile(SpriteKind.gemsPlayer, img`" line102="    5 4 4 5 5 4 4 4 4 2 2 2 4 4 4 4" line103="    4 4 4 4 4 5 5 4 2 2 2 2 4 4 4 5" line104="    4 2 2 2 4 4 5 4 2 2 4 4 5 5 5 5" line105="    2 2 4 2 4 4 5 4 2 2 4 5 5 5 5 4" line106="    2 2 2 2 4 4 5 4 2 2 4 4 5 5 4 4" line107="    4 2 2 2 4 5 5 4 4 4 4 4 4 4 4 2" line108="    2 2 2 4 4 5 5 5 4 4 2 2 2 2 2 2" line109="    4 2 2 4 5 5 5 5 4 2 2 4 2 2 2 4" line110="    5 4 4 4 4 4 4 5 5 4 2 2 2 4 4 4" line111="    4 4 4 2 2 2 4 4 5 5 4 4 4 4 5 5" line112="    4 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5" line113="    5 4 4 2 4 2 2 4 4 5 5 5 4 4 4 5" line114="    5 5 4 2 2 2 4 4 4 5 5 4 2 2 2 4" line115="    4 5 4 4 4 4 5 5 5 5 4 2 4 2 2 4" line116="    4 5 5 5 5 5 5 4 4 4 2 4 2 4 2 4" line117="    4 5 5 5 4 4 4 4 2 2 2 2 4 2 4 4" line118="`, function(sprite: Sprite, location: tiles.Location) {" line119="    goBack()" line120="    gemsHero.say(&quot;there is lava ahead,I can not go!&quot;)" line121="" line122="})" line123="//碰到毒草" line124="scene.onOverlapTile(SpriteKind.gemsPlayer, img`" line125="    . . . . . . c c . . . . . c c ." line126="    . . . c c . c 3 c . c c . c 3 c" line127="    . . c 3 6 c 3 3 c . c 3 c 6 3 c" line128="    . . c 3 3 3 3 6 c . c 3 6 3 3 c" line129="    . . . c 6 3 6 6 c c c 3 3 3 c ." line130="    . . . . c c 6 6 c 6 c 6 3 3 c ." line131="    . . . . c 3 c 6 c 3 3 c 6 6 c ." line132="    c c . c 3 3 c c c c 3 3 c 6 c ." line133="    c 3 c c 3 6 6 c 3 c 3 6 c 6 c ." line134="    c 3 3 6 3 6 3 6 3 3 3 c c c c c" line135="    . c 3 3 3 c 3 3 6 3 6 c c 3 3 c" line136="    . . c 3 3 c c 3 3 3 6 c 3 3 6 ." line137="    c c c 6 3 6 c c 6 3 6 6 3 6 c c" line138="    c 3 3 3 3 3 c c c 3 6 3 3 3 3 c" line139="    . c c 6 6 3 6 6 c 6 3 3 6 c c ." line140="    . . . c 6 3 3 6 6 6 6 3 c . . ." line141="`, function(sprite: Sprite, location: tiles.Location) {" line142="    goBack()" line143="    gemsHero.say(&quot;There is poison plant,I can not go!&quot;)" line144="" line145="})" line146="" line147="//获得宝石事件" line148="sprites.onOverlap(SpriteKind.gemsCatcher, SpriteKind.gems, function(sprite: Sprite, otherSprite: Sprite) {" line149="    otherSprite.destroy()" line150="    info.player1.changeScoreBy(-1)" line151="})" line152="sprites.onOverlap(SpriteKind.getGemsKind, SpriteKind.gemsKind, function(sprite: Sprite, otherSprite: Sprite) {" line153="    otherSprite.destroy()" line154="    info.player1.changeScoreBy(-1)" line155="    gemsNum-=1" line156="})" line157="" line158="//关卡设定" line159="function levelset(level:number){" line160="   switch(level){" line161="&#9;&#9;&#9;&#9;case 1:" line162="                     tiles.setTilemap(tiles.createTilemap(hex`0a0008000202020202020202020202020202020202020202020202020202020202020202020102020202020202020203020202020202020202020202020202020202020202020202020202020202020202020202`, img`" line163="                         . . . . . . . . . ." line164="                         . . . . . . . . . ." line165="                         . . . . . . . . . ." line166="                         . . . . . . . . . ." line167="                         . . . . . . . . . ." line168="                         . . . . . . . . . ." line169="                         . . . . . . . . . ." line170="                         . . . . . . . . . ." line171="                     `, [myTiles.transparency16,sprites.dungeon.buttonTealDepressed,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia], TileScale.Sixteen))   " line172="&#9;&#9;&#9;&#9;&#9;break;" line173="&#9;&#9;&#9;&#9;case 2:" line174="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101010101010101010101000003000001010101010000010002010101010101010100010101010101010000000101010101010101010101010101010101010101010101`, img`" line175="                        . . . . . . . . . ." line176="                        . . . . . . . . . ." line177="                        . . . . . . . . . ." line178="                        . . . . . . . . . ." line179="                        . . . . . . . . . ." line180="                        . . . . . . . . . ." line181="                        . . . . . . . . . ." line182="                        . . . . . . . . . ." line183="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed], TileScale.Sixteen))" line184="                    break;" line185="&#9;&#9;&#9;&#9;case 3:" line186="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000301010101010201010100010101010100010101000101010101000101010001010101010001010100010101010100010101000101010101000101010200000000000201010101010101010101010101`, img`" line187="                        . . . . . . . . . ." line188="                        . . . . . . . . . ." line189="                        . . . . . . . . . ." line190="                        . . . . . . . . . ." line191="                        . . . . . . . . . ." line192="                        . . . . . . . . . ." line193="                        . . . . . . . . . ." line194="                        . . . . . . . . . ." line195="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed], TileScale.Sixteen))" line196="                    break;" line197="                case 4:" line198="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101010101010101010101000004020101010101010000010101010101020500000101010101010101000003010101010101010101010101010101010101010101010101`, img`" line199="                        . . . . . . . . . ." line200="                        . . . . . . . . . ." line201="                        . . . . . . . . . ." line202="                        . . . . . . . . . ." line203="                        . . . . . . . . . ." line204="                        . . . . . . . . . ." line205="                        . . . . . . . . . ." line206="                        . . . . . . . . . ." line207="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed,sprites.dungeon.hazardLava1,sprites.builtin.coral0], TileScale.Sixteen))" line208="                    break;" line209="                case 5:" line210="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101030101010101010101010004020101010101010100010101010101010101000101010101010101010004020101010101010100010101010101010101010101010101010101`, img`" line211="                        . . . . . . . . . ." line212="                        . . . . . . . . . ." line213="                        . . . . . . . . . ." line214="                        . . . . . . . . . ." line215="                        . . . . . . . . . ." line216="                        . . . . . . . . . ." line217="                        . . . . . . . . . ." line218="                        . . . . . . . . . ." line219="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed,sprites.dungeon.hazardLava1], TileScale.Sixteen))" line220="                    break;" line221="                case 6:" line222="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101030101010101010101010401010101010101010102010101010101010101050101010101010101010201010101010101010104010101010101010101020101010101010101`, img`" line223="                        . . . . . . . . . ." line224="                        . . . . . . . . . ." line225="                        . . . . . . . . . ." line226="                        . . . . . . . . . ." line227="                        . . . . . . . . . ." line228="                        . . . . . . . . . ." line229="                        . . . . . . . . . ." line230="                        . . . . . . . . . ." line231="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed,sprites.dungeon.hazardLava1,sprites.builtin.coral0], TileScale.Sixteen))" line232="                    break;" line233="                    " line234="&#9;&#9;&#9;}    " line235="}" line236="" line237="" line238="//变量声明" line239="let gem: Sprite = null" line240="let gemsHero: Sprite = null" line241="let heroDirection = 0" line242="let gemsNum = 0 " line243="let level = 1" line244="let heroRow = 0" line245="let heroCol = 0" line246="heroDirection = 0" line247="export enum turnDirection{" line248="    left," line249="    right" line250="    }" line251="export enum magicKind{" line252="    fire ," line253="    ice" line254="}" line255="export enum obastaleKind{" line256="    lava ," line257="    plant" line258="}" line259="export let frontOfHero ={" line260="    //行" line261="    row:0," line262="    //列" line263="    col:0" line264="}" line265="" line266="" line267="//获取角色前方" line268="function getTheFrontOfHero():any{" line269="let addRow = 0" line270="let addCol = 0" line271=" if (heroDirection == 3) {" line272="        addCol += 1" line273="    } else if (heroDirection == 0) {" line274="        addRow += 1" line275="    } else if (heroDirection == 1) {" line276="        addCol += -1" line277="    } else if (heroDirection == 2) {" line278="        addRow += -1" line279="    }" line280="" line281="frontOfHero.row = heroRow+addRow" line282="frontOfHero.col = heroCol+addCol" line283="return frontOfHero" line284="}" line285="" line286="" line287="//初始化" line288="//%block" line289="//%group=&quot;Operate&quot;" line290="export function initGame(){ " line291="    gemsHero = sprites.create(img`" line292="    . . . . . . f f f f . . . . . ." line293="    . . . . f f f 2 2 f f f . . . ." line294="    . . . f f f 2 2 2 2 f f f . . ." line295="    . . f f f e e e e e e f f f . ." line296="    . . f f e 2 2 2 2 2 2 e e f . ." line297="    . . f e 2 f f f f f f 2 e f . ." line298="    . . f f f f e e e e f f f f . ." line299="    . f f e f b f 4 4 f b f e f f ." line300="    . f e e 4 1 f d d f 1 4 e e f ." line301="    . . f e e d d d d d d e e f . ." line302="    . . . f e e 4 4 4 4 e e f . . ." line303="    . . e 4 f 2 2 2 2 2 2 f 4 e . ." line304="    . . 4 d f 2 2 2 2 2 2 f d 4 . ." line305="    . . 4 4 f 4 4 5 5 4 4 f 4 4 . ." line306="    . . . . . f f f f f f . . . . ." line307="    . . . . . f f . . f f . . . . ." line308="`, SpriteKind.gemsPlayer)" line309="    level = game.askForNumber(&quot;set level(1-6)&quot;)" line310="    levelset(level)" line311="    tiles.placeOnRandomTile(gemsHero, img`" line312="        b b b b b b b b b b b b b b b b" line313="        b c b b b b b b b b b b b b c b" line314="        b b b c 6 6 6 6 6 6 6 6 c b b b" line315="        b b c 6 6 6 6 6 6 6 6 6 6 c b b" line316="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line317="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line318="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line319="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line320="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line321="        b b 9 6 6 6 6 6 6 6 6 6 6 9 b b" line322="        b b 9 6 6 6 6 6 6 6 6 6 6 9 b b" line323="        b b 6 9 6 6 6 6 6 6 6 6 9 6 b b" line324="        b b c 6 9 9 9 9 9 9 9 9 6 c b b" line325="        b b b c c c c c c c c c c b b b" line326="        b c b b b b b b b b b b b b c b" line327="        b b b b b b b b b b b b b b b b" line328="    `)" line329="    pause(500)" line330="    for (let 值 of tiles.getTilesByType(sprites.dungeon.collectibleInsignia)) {" line331="        gem = sprites.create(img`" line332="            . . . . . . . . . . . . . . . ." line333="            . . . . . . 4 4 4 4 . . . . . ." line334="            . . . . 4 4 4 5 5 4 4 4 . . . ." line335="            . . . 3 3 3 3 4 4 4 4 4 4 . . ." line336="            . . 4 3 3 3 3 2 2 2 1 1 4 4 . ." line337="            . . 3 3 3 3 3 2 2 2 1 1 5 4 . ." line338="            . 4 3 3 3 3 2 2 2 2 2 5 5 4 4 ." line339="            . 4 3 3 3 2 2 2 4 4 4 4 5 4 4 ." line340="            . 4 4 3 3 2 2 4 4 4 4 4 4 4 4 ." line341="            . 4 2 3 3 2 2 4 4 4 4 4 4 4 4 ." line342="            . . 4 2 3 3 2 4 4 4 4 4 2 4 . ." line343="            . . 4 2 2 3 2 2 4 4 4 2 4 4 . ." line344="            . . . 4 2 2 2 2 2 2 2 2 4 . . ." line345="            . . . . 4 4 2 2 2 2 4 4 . . . ." line346="            . . . . . . 4 4 4 4 . . . . . ." line347="            . . . . . . . . . . . . . . . ." line348="        `, SpriteKind.gemsKind)" line349="        tiles.placeOnTile(gem, 值)" line350="        gemsNum+=1" line351="        info.player1.setScore(gemsNum)" line352="    }" line353="    gemsHero.z = 1000" line354="    heroRow = gemsHero.y/16-0.5" line355="    heroCol = gemsHero.x/16-0.5" line356="    gemsHero.say(&quot;改程序前，先画流程图&quot;,3000)" line357="}" line358="" line359="//获得宝石" line360="//%block" line361="//%group=&quot;Operate&quot;" line362="export function takeGems(){" line363="    gemsHero.setKind(SpriteKind.getGemsKind)" line364="    pause(100)" line365="    music.baDing.play()" line366="    gemsHero.setFlag(SpriteFlag.Ghost, true)" line367="    gemsHero.y-=5" line368="    pause(100)" line369="    gemsHero.setKind(SpriteKind.gemsPlayer)" line370="    gemsHero.setFlag(SpriteFlag.Ghost, false)" line371="    gemsHero.y+=5" line372="    if(gemsNum==0){" line373="        game.over(true)" line374="    }" line375="}" line376="" line377="" line378="//施法" line379="function actionOfMagic(isIceMagic:boolean){" line380="" line381="    if(isIceMagic){" line382="        let magicCube = sprites.create(img`" line383="            . . . . . . . . . . . . . . . ." line384="            . . . . . . . . . . . . . . . ." line385="            . . . . . . . . . . . . . . . ." line386="            . . . . . . . . . . . . . . . ." line387="            . . . . . . . . . . . . . . . ." line388="            . . . . 8 8 8 8 8 8 8 . . . . ." line389="            . . . . 8 1 1 1 1 1 8 . . . . ." line390="            . . . . 8 1 1 1 1 1 8 . . . . ." line391="            . . . . 8 1 1 9 1 1 8 . . . . ." line392="            . . . . 8 1 1 1 1 1 8 . . . . ." line393="            . . . . 8 1 1 1 1 1 8 . . . . ." line394="            . . . . 8 8 8 8 8 8 8 . . . . ." line395="            . . . . . . . . . . . . . . . ." line396="            . . . . . . . . . . . . . . . ." line397="            . . . . . . . . . . . . . . . ." line398="            . . . . . . . . . . . . . . . ." line399="        `,SpriteKind.iceMagic)" line400="        tiles.placeOnTile(magicCube, tiles.getTileLocation(frontOfHero.col, frontOfHero.row))" line401="        pause(500)" line402="        magicCube.destroy(effects.coolRadial,500)" line403="    }" line404="    else{" line405="        let magicCube2 = sprites.create(img`" line406="            . . . . . . . . . . . . . . . ." line407="            . . . . . . . . . . . . . . . ." line408="            . . . . . . . . . . . . . . . ." line409="            . . . . . . . . . . . . . . . ." line410="            . . . . . . . . . . . . . . . ." line411="            . . . . 2 2 2 2 2 2 2 . . . . ." line412="            . . . . 2 5 5 5 5 5 2 . . . . ." line413="            . . . . 2 5 5 5 5 5 2 . . . . ." line414="            . . . . 2 5 5 4 5 5 2 . . . . ." line415="            . . . . 2 5 5 5 5 5 2 . . . . ." line416="            . . . . 2 5 5 5 5 5 2 . . . . ." line417="            . . . . 2 2 2 2 2 2 2 . . . . ." line418="            . . . . . . . . . . . . . . . ." line419="            . . . . . . . . . . . . . . . ." line420="            . . . . . . . . . . . . . . . ." line421="            . . . . . . . . . . . . . . . ." line422="        `,SpriteKind.fireMagic)" line423="        tiles.placeOnTile(magicCube2, tiles.getTileLocation(frontOfHero.col, frontOfHero.row))" line424="        pause(500)" line425="        magicCube2.destroy(effects.fire,500)" line426="    }" line427="}" line428="//使用魔法" line429="//%block=&quot;use %magicKind magic&quot;" line430="//%group=&quot;Operate&quot;" line431="export function useMagic(choice:magicKind){" line432="    getTheFrontOfHero()" line433="    switch(choice){" line434="        case magicKind.ice:" line435="        if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line436="            5 4 4 5 5 4 4 4 4 2 2 2 4 4 4 4" line437="            4 4 4 4 4 5 5 4 2 2 2 2 4 4 4 5" line438="            4 2 2 2 4 4 5 4 2 2 4 4 5 5 5 5" line439="            2 2 4 2 4 4 5 4 2 2 4 5 5 5 5 4" line440="            2 2 2 2 4 4 5 4 2 2 4 4 5 5 4 4" line441="            4 2 2 2 4 5 5 4 4 4 4 4 4 4 4 2" line442="            2 2 2 4 4 5 5 5 4 4 2 2 2 2 2 2" line443="            4 2 2 4 5 5 5 5 4 2 2 4 2 2 2 4" line444="            5 4 4 4 4 4 4 5 5 4 2 2 2 4 4 4" line445="            4 4 4 2 2 2 4 4 5 5 4 4 4 4 5 5" line446="            4 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5" line447="            5 4 4 2 4 2 2 4 4 5 5 5 4 4 4 5" line448="            5 5 4 2 2 2 4 4 4 5 5 4 2 2 2 4" line449="            4 5 4 4 4 4 5 5 5 5 4 2 4 2 2 4" line450="            4 5 5 5 5 5 5 4 4 4 2 4 2 4 2 4" line451="            4 5 5 5 4 4 4 4 2 2 2 2 4 2 4 4" line452="        `)){    " line453="            actionOfMagic(true)" line454="        }" line455="        else{" line456="            gemsHero.say(&quot;There is not hot lava need to be frozen!&quot;)" line457="        }" line458="        break" line459="        default:" line460="        if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line461="            . . . . . . c c . . . . . c c ." line462="            . . . c c . c 3 c . c c . c 3 c" line463="            . . c 3 6 c 3 3 c . c 3 c 6 3 c" line464="            . . c 3 3 3 3 6 c . c 3 6 3 3 c" line465="            . . . c 6 3 6 6 c c c 3 3 3 c ." line466="            . . . . c c 6 6 c 6 c 6 3 3 c ." line467="            . . . . c 3 c 6 c 3 3 c 6 6 c ." line468="            c c . c 3 3 c c c c 3 3 c 6 c ." line469="            c 3 c c 3 6 6 c 3 c 3 6 c 6 c ." line470="            c 3 3 6 3 6 3 6 3 3 3 c c c c c" line471="            . c 3 3 3 c 3 3 6 3 6 c c 3 3 c" line472="            . . c 3 3 c c 3 3 3 6 c 3 3 6 ." line473="            c c c 6 3 6 c c 6 3 6 6 3 6 c c" line474="            c 3 3 3 3 3 c c c 3 6 3 3 3 3 c" line475="            . c c 6 6 3 6 6 c 6 3 3 6 c c ." line476="            . . . c 6 3 3 6 6 6 6 3 c . . ." line477="        `)){    " line478="            actionOfMagic(false)" line479="        }else{" line480="            gemsHero.say(&quot;There is not poison plant need to be fired!&quot;)" line481="        }" line482="        break" line483="    }" line484="}" line485="    //判断前方障碍物" line486="    //% block=&quot;there is %obstaleKind ahead&quot;" line487="    export function isObastaleAhead(choice:obastaleKind): boolean {" line488="        getTheFrontOfHero()" line489="        if(choice == obastaleKind.lava){" line490="            if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line491="                5 4 4 5 5 4 4 4 4 2 2 2 4 4 4 4" line492="                4 4 4 4 4 5 5 4 2 2 2 2 4 4 4 5" line493="                4 2 2 2 4 4 5 4 2 2 4 4 5 5 5 5" line494="                2 2 4 2 4 4 5 4 2 2 4 5 5 5 5 4" line495="                2 2 2 2 4 4 5 4 2 2 4 4 5 5 4 4" line496="                4 2 2 2 4 5 5 4 4 4 4 4 4 4 4 2" line497="                2 2 2 4 4 5 5 5 4 4 2 2 2 2 2 2" line498="                4 2 2 4 5 5 5 5 4 2 2 4 2 2 2 4" line499="                5 4 4 4 4 4 4 5 5 4 2 2 2 4 4 4" line500="                4 4 4 2 2 2 4 4 5 5 4 4 4 4 5 5" line501="                4 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5" line502="                5 4 4 2 4 2 2 4 4 5 5 5 4 4 4 5" line503="                5 5 4 2 2 2 4 4 4 5 5 4 2 2 2 4" line504="                4 5 4 4 4 4 5 5 5 5 4 2 4 2 2 4" line505="                4 5 5 5 5 5 5 4 4 4 2 4 2 4 2 4" line506="                4 5 5 5 4 4 4 4 2 2 2 2 4 2 4 4" line507="            `)){return true}return false}" line508="        else{if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line509="            . . . . . . c c . . . . . c c ." line510="            . . . c c . c 3 c . c c . c 3 c" line511="            . . c 3 6 c 3 3 c . c 3 c 6 3 c" line512="            . . c 3 3 3 3 6 c . c 3 6 3 3 c" line513="            . . . c 6 3 6 6 c c c 3 3 3 c ." line514="            . . . . c c 6 6 c 6 c 6 3 3 c ." line515="            . . . . c 3 c 6 c 3 3 c 6 6 c ." line516="            c c . c 3 3 c c c c 3 3 c 6 c ." line517="            c 3 c c 3 6 6 c 3 c 3 6 c 6 c ." line518="            c 3 3 6 3 6 3 6 3 3 3 c c c c c" line519="            . c 3 3 3 c 3 3 6 3 6 c c 3 3 c" line520="            . . c 3 3 c c 3 3 3 6 c 3 3 6 ." line521="            c c c 6 3 6 c c 6 3 6 6 3 6 c c" line522="            c 3 3 3 3 3 c c c 3 6 3 3 3 3 c" line523="            . c c 6 6 3 6 6 c 6 3 3 6 c c ." line524="            . . . c 6 3 3 6 6 6 6 3 c . . ." line525="        `)){return true}return false}" line526="    }" line527="" line528="    //转向" line529="    //%block=&quot;turn %turnDirection&quot;" line530="    //%group=&quot;Move&quot;" line531="    export function turn (choice: turnDirection) {" line532="    switch(choice){" line533="        case turnDirection.right:" line534="        heroDirection += 1" line535="        heroDirection = heroDirection % 4" line536="        break" line537="        default :" line538="        heroDirection += 3" line539="        heroDirection = heroDirection % 4" line540="        break" line541="    }" line542="    if (heroDirection == 3) {//向右" line543="        gemsHero.setImage(img`" line544="            . . . . . . f f f f f f . . . ." line545="            . . . . f f e e e e f 2 f . . ." line546="            . . . f f e e e e f 2 2 2 f . ." line547="            . . . f e e e f f e e e e f . ." line548="            . . . f f f f e e 2 2 2 2 e f ." line549="            . . . f e 2 2 2 f f f f e 2 f ." line550="            . . f f f f f f f e e e f f f ." line551="            . . f f e 4 4 e b f 4 4 e e f ." line552="            . . f e e 4 d 4 1 f d d e f . ." line553="            . . . f e e e 4 d d d d f . . ." line554="            . . . . f f e e 4 4 4 e f . . ." line555="            . . . . . 4 d d e 2 2 2 f . . ." line556="            . . . . . e d d e 2 2 2 f . . ." line557="            . . . . . f e e f 4 5 5 f . . ." line558="            . . . . . . f f f f f f . . . ." line559="            . . . . . . . f f f . . . . . ." line560="        `)" line561="    } else if (heroDirection == 0) {//向下" line562="        gemsHero.setImage(img`" line563="            . . . . . . f f f f . . . . . ." line564="            . . . . f f f 2 2 f f f . . . ." line565="            . . . f f f 2 2 2 2 f f f . . ." line566="            . . f f f e e e e e e f f f . ." line567="            . . f f e 2 2 2 2 2 2 e e f . ." line568="            . . f e 2 f f f f f f 2 e f . ." line569="            . . f f f f e e e e f f f f . ." line570="            . f f e f b f 4 4 f b f e f f ." line571="            . f e e 4 1 f d d f 1 4 e e f ." line572="            . . f e e d d d d d d e e f . ." line573="            . . . f e e 4 4 4 4 e e f . . ." line574="            . . e 4 f 2 2 2 2 2 2 f 4 e . ." line575="            . . 4 d f 2 2 2 2 2 2 f d 4 . ." line576="            . . 4 4 f 4 4 5 5 4 4 f 4 4 . ." line577="            . . . . . f f f f f f . . . . ." line578="            . . . . . f f . . f f . . . . ." line579="        `)" line580="    } else if (heroDirection == 1) {//向左" line581="        gemsHero.setImage(img`" line582="            . . . . f f f f f f . . . . . ." line583="            . . . f 2 f e e e e f f . . . ." line584="            . . f 2 2 2 f e e e e f f . . ." line585="            . . f e e e e f f e e e f . . ." line586="            . f e 2 2 2 2 e e f f f f . . ." line587="            . f 2 e f f f f 2 2 2 e f . . ." line588="            . f f f e e e f f f f f f f . ." line589="            . f e e 4 4 f b e 4 4 e f f . ." line590="            . . f e d d f 1 4 d 4 e e f . ." line591="            . . . f d d d d 4 e e e f . . ." line592="            . . . f e 4 4 4 e e f f . . . ." line593="            . . . f 2 2 2 e d d 4 . . . . ." line594="            . . . f 2 2 2 e d d e . . . . ." line595="            . . . f 5 5 4 f e e f . . . . ." line596="            . . . . f f f f f f . . . . . ." line597="            . . . . . . f f f . . . . . . ." line598="        `)" line599="    } else if (heroDirection == 2) {//向上" line600="        gemsHero.setImage(img`" line601="            . . . . . . f f f f . . . . . ." line602="            . . . . f f e e e e f f . . . ." line603="            . . . f e e e f f e e e f . . ." line604="            . . f f f f f 2 2 f f f f f . ." line605="            . . f f e 2 e 2 2 e 2 e f f . ." line606="            . . f e 2 f 2 f f 2 f 2 e f . ." line607="            . . f f f 2 2 e e 2 2 f f f . ." line608="            . f f e f 2 f e e f 2 f e f f ." line609="            . f e e f f e e e e f e e e f ." line610="            . . f e e e e e e e e e e f . ." line611="            . . . f e e e e e e e e f . . ." line612="            . . e 4 f f f f f f f f 4 e . ." line613="            . . 4 d f 2 2 2 2 2 2 f d 4 . ." line614="            . . 4 4 f 4 4 4 4 4 4 f 4 4 . ." line615="            . . . . . f f f f f f . . . . ." line616="            . . . . . f f . . f f . . . . ." line617="        `)" line618="    }" line619="    pause(500)" line620="}" line621="    //前进" line622="    //%block" line623="    //%group=&quot;Move&quot;" line624="    export function stepForward () {" line625="    if (heroDirection == 3) {" line626="        heroCol += 1" line627="    } else if (heroDirection == 0) {" line628="        heroRow += 1" line629="    } else if (heroDirection == 1) {" line630="        heroCol += -1" line631="    } else if (heroDirection == 2) {" line632="        heroRow += -1" line633="    }" line634="    tiles.placeOnTile(gemsHero, tiles.getTileLocation(heroCol, heroRow))" line635="    pause(500)" line636="}" line637="" line638="" line639="}" numlines="640"></mutation></block></statement></block></xml>