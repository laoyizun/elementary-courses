<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable type="KIND_SpriteKind" id="mc?5cXxTYJFJ8S@yMS,%">gemsPlayer</variable><variable type="KIND_SpriteKind" id="53Hk*uLE#KK^blcGT$c|">gems</variable><variable type="KIND_SpriteKind" id="6F4[oUc=)i]6?(E/iNC(">getGemsKind</variable><variable type="KIND_SpriteKind" id="{{FdO6MlR8|4n;h#~.4(">gemsKind</variable><variable type="KIND_SpriteKind" id="pa1Ec,nB(sCI6(ZYB~m_">iceMagic</variable><variable type="KIND_SpriteKind" id="u=!nVD86m^J$@rwLyzH$">fireMagic</variable></variables><block type="pxt-on-start" id="m[PSvHTynR_7q!?g6Gu." x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="h#@^Ha9z4=f[^CUoQ4cS" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace getgems {" line1="" line2="//角色碰到障碍物回退" line3="function goBack(){" line4=" if (heroDirection == 3) {" line5="        heroCol += -1" line6="    } else if (heroDirection == 0) {" line7="        heroRow += -1" line8="    } else if (heroDirection == 1) {" line9="        heroCol += 1" line10="    } else if (heroDirection == 2) {" line11="        heroRow += 1" line12="    }" line13="    scene.cameraShake(4, 500)" line14="    tiles.placeOnTile(gemsHero, tiles.getTileLocation(heroCol, heroRow))" line15="}" line16="" line17="//事件注册" line18="//魔法消除障碍物碰撞事件" line19="scene.onOverlapTile(SpriteKind.fireMagic, img`" line20="    . . . . . . c c . . . . . c c ." line21="    . . . c c . c 3 c . c c . c 3 c" line22="    . . c 3 6 c 3 3 c . c 3 c 6 3 c" line23="    . . c 3 3 3 3 6 c . c 3 6 3 3 c" line24="    . . . c 6 3 6 6 c c c 3 3 3 c ." line25="    . . . . c c 6 6 c 6 c 6 3 3 c ." line26="    . . . . c 3 c 6 c 3 3 c 6 6 c ." line27="    c c . c 3 3 c c c c 3 3 c 6 c ." line28="    c 3 c c 3 6 6 c 3 c 3 6 c 6 c ." line29="    c 3 3 6 3 6 3 6 3 3 3 c c c c c" line30="    . c 3 3 3 c 3 3 6 3 6 c c 3 3 c" line31="    . . c 3 3 c c 3 3 3 6 c 3 3 6 ." line32="    c c c 6 3 6 c c 6 3 6 6 3 6 c c" line33="    c 3 3 3 3 3 c c c 3 6 3 3 3 3 c" line34="    . c c 6 6 3 6 6 c 6 3 3 6 c c ." line35="    . . . c 6 3 3 6 6 6 6 3 c . . ." line36="`, function(sprite: Sprite, location: tiles.Location) {" line37="    tiles.setTileAt(tiles.getTileLocation(location.col,location.row), img`" line38="        . . . . . . . . . . . . . . . ." line39="        . . . . . . . . . . . . . . . ." line40="        . . . . . . . . . . . . . . . ." line41="        . . . . . . . . . . . . . . . ." line42="        . . . . . . . . . . . . . . . ." line43="        . . . . . . . . . . . . . . . ." line44="        . . . . . . . . . . . . . . . ." line45="        . . . . . . . . . . . . . . . ." line46="        . . . . . . . . . . . . . . . ." line47="        . . . . . . . . . . . . . . . ." line48="        . . . . . . . . . . . . . . . ." line49="        . . . . . . . . . . . . . . . ." line50="        . . . . . . . . . . . . . . . ." line51="        . . . . . . . . . . . . . . . ." line52="        . . . . . . . . . . . . . . . ." line53="        . . . . . . . . . . . . . . . ." line54="    `)" line55="})" line56="scene.onOverlapTile(SpriteKind.iceMagic, img`" line57="    5 4 4 5 5 4 4 4 4 2 2 2 4 4 4 4" line58="    4 4 4 4 4 5 5 4 2 2 2 2 4 4 4 5" line59="    4 2 2 2 4 4 5 4 2 2 4 4 5 5 5 5" line60="    2 2 4 2 4 4 5 4 2 2 4 5 5 5 5 4" line61="    2 2 2 2 4 4 5 4 2 2 4 4 5 5 4 4" line62="    4 2 2 2 4 5 5 4 4 4 4 4 4 4 4 2" line63="    2 2 2 4 4 5 5 5 4 4 2 2 2 2 2 2" line64="    4 2 2 4 5 5 5 5 4 2 2 4 2 2 2 4" line65="    5 4 4 4 4 4 4 5 5 4 2 2 2 4 4 4" line66="    4 4 4 2 2 2 4 4 5 5 4 4 4 4 5 5" line67="    4 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5" line68="    5 4 4 2 4 2 2 4 4 5 5 5 4 4 4 5" line69="    5 5 4 2 2 2 4 4 4 5 5 4 2 2 2 4" line70="    4 5 4 4 4 4 5 5 5 5 4 2 4 2 2 4" line71="    4 5 5 5 5 5 5 4 4 4 2 4 2 4 2 4" line72="    4 5 5 5 4 4 4 4 2 2 2 2 4 2 4 4" line73="`, function(sprite: Sprite, location: tiles.Location) {" line74="    tiles.setTileAt(tiles.getTileLocation(location.col,location.row), img`" line75="        . . . . . . . . . . . . . . . ." line76="        . . . . . . . . . . . . . . . ." line77="        . . . . . . . . . . . . . . . ." line78="        . . . . . . . . . . . . . . . ." line79="        . . . . . . . . . . . . . . . ." line80="        . . . . . . . . . . . . . . . ." line81="        . . . . . . . . . . . . . . . ." line82="        . . . . . . . . . . . . . . . ." line83="        . . . . . . . . . . . . . . . ." line84="        . . . . . . . . . . . . . . . ." line85="        . . . . . . . . . . . . . . . ." line86="        . . . . . . . . . . . . . . . ." line87="        . . . . . . . . . . . . . . . ." line88="        . . . . . . . . . . . . . . . ." line89="        . . . . . . . . . . . . . . . ." line90="        . . . . . . . . . . . . . . . ." line91="    `)" line92="})" line93="" line94="//碰到墙回退" line95="scene.onOverlapTile(SpriteKind.gemsPlayer, sprites.builtin.forestTiles0, function (sprite, location) {" line96="   pause(500) " line97="   goBack()" line98="" line99="})" line100="//碰到熔岩" line101="scene.onOverlapTile(SpriteKind.gemsPlayer, img`" line102="    5 4 4 5 5 4 4 4 4 2 2 2 4 4 4 4" line103="    4 4 4 4 4 5 5 4 2 2 2 2 4 4 4 5" line104="    4 2 2 2 4 4 5 4 2 2 4 4 5 5 5 5" line105="    2 2 4 2 4 4 5 4 2 2 4 5 5 5 5 4" line106="    2 2 2 2 4 4 5 4 2 2 4 4 5 5 4 4" line107="    4 2 2 2 4 5 5 4 4 4 4 4 4 4 4 2" line108="    2 2 2 4 4 5 5 5 4 4 2 2 2 2 2 2" line109="    4 2 2 4 5 5 5 5 4 2 2 4 2 2 2 4" line110="    5 4 4 4 4 4 4 5 5 4 2 2 2 4 4 4" line111="    4 4 4 2 2 2 4 4 5 5 4 4 4 4 5 5" line112="    4 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5" line113="    5 4 4 2 4 2 2 4 4 5 5 5 4 4 4 5" line114="    5 5 4 2 2 2 4 4 4 5 5 4 2 2 2 4" line115="    4 5 4 4 4 4 5 5 5 5 4 2 4 2 2 4" line116="    4 5 5 5 5 5 5 4 4 4 2 4 2 4 2 4" line117="    4 5 5 5 4 4 4 4 2 2 2 2 4 2 4 4" line118="`, function(sprite: Sprite, location: tiles.Location) {" line119="    goBack()" line120="    gemsHero.say(&quot;there is lava ahead,I can not go!&quot;)" line121="" line122="})" line123="//碰到毒草" line124="scene.onOverlapTile(SpriteKind.gemsPlayer, img`" line125="    . . . . . . c c . . . . . c c ." line126="    . . . c c . c 3 c . c c . c 3 c" line127="    . . c 3 6 c 3 3 c . c 3 c 6 3 c" line128="    . . c 3 3 3 3 6 c . c 3 6 3 3 c" line129="    . . . c 6 3 6 6 c c c 3 3 3 c ." line130="    . . . . c c 6 6 c 6 c 6 3 3 c ." line131="    . . . . c 3 c 6 c 3 3 c 6 6 c ." line132="    c c . c 3 3 c c c c 3 3 c 6 c ." line133="    c 3 c c 3 6 6 c 3 c 3 6 c 6 c ." line134="    c 3 3 6 3 6 3 6 3 3 3 c c c c c" line135="    . c 3 3 3 c 3 3 6 3 6 c c 3 3 c" line136="    . . c 3 3 c c 3 3 3 6 c 3 3 6 ." line137="    c c c 6 3 6 c c 6 3 6 6 3 6 c c" line138="    c 3 3 3 3 3 c c c 3 6 3 3 3 3 c" line139="    . c c 6 6 3 6 6 c 6 3 3 6 c c ." line140="    . . . c 6 3 3 6 6 6 6 3 c . . ." line141="`, function(sprite: Sprite, location: tiles.Location) {" line142="    goBack()" line143="    gemsHero.say(&quot;There is poison plant,I can not go!&quot;)" line144="" line145="})" line146="" line147="//获得宝石事件" line148="" line149="sprites.onOverlap(SpriteKind.getGemsKind, SpriteKind.gemsKind, function(sprite: Sprite, otherSprite: Sprite) {" line150="    otherSprite.destroy()" line151="    info.player1.changeScoreBy(-1)" line152="    gemsNum-=1" line153="})" line154="" line155="//关卡设定" line156="function levelset(level:number){" line157="   switch(level){" line158="&#9;&#9;&#9;&#9;case 1:" line159="                     tiles.setTilemap(tiles.createTilemap(hex`0a0008000202020202020202020202020202020202020202020202020202020202020202020102020202020202020203020202020202020202020202020202020202020202020202020202020202020202020202`, img`" line160="                         . . . . . . . . . ." line161="                         . . . . . . . . . ." line162="                         . . . . . . . . . ." line163="                         . . . . . . . . . ." line164="                         . . . . . . . . . ." line165="                         . . . . . . . . . ." line166="                         . . . . . . . . . ." line167="                         . . . . . . . . . ." line168="                     `, [myTiles.transparency16,sprites.dungeon.buttonTealDepressed,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia], TileScale.Sixteen))   " line169="&#9;&#9;&#9;&#9;&#9;break;" line170="&#9;&#9;&#9;&#9;case 2:" line171="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101010101010101010101000003000001010101010000010002010101010101010100010101010101010000000101010101010101010101010101010101010101010101`, img`" line172="                        . . . . . . . . . ." line173="                        . . . . . . . . . ." line174="                        . . . . . . . . . ." line175="                        . . . . . . . . . ." line176="                        . . . . . . . . . ." line177="                        . . . . . . . . . ." line178="                        . . . . . . . . . ." line179="                        . . . . . . . . . ." line180="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed], TileScale.Sixteen))" line181="                    break;" line182="&#9;&#9;&#9;&#9;case 3:" line183="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000301010101010201010100010101010100010101000101010101000101010001010101010001010100010101010100010101000101010101000101010200000000000201010101010101010101010101`, img`" line184="                        . . . . . . . . . ." line185="                        . . . . . . . . . ." line186="                        . . . . . . . . . ." line187="                        . . . . . . . . . ." line188="                        . . . . . . . . . ." line189="                        . . . . . . . . . ." line190="                        . . . . . . . . . ." line191="                        . . . . . . . . . ." line192="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed], TileScale.Sixteen))" line193="                    break;" line194="                case 4:" line195="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101010101010101010101000004020101010101010000010101010101020500000101010101010101000003010101010101010101010101010101010101010101010101`, img`" line196="                        . . . . . . . . . ." line197="                        . . . . . . . . . ." line198="                        . . . . . . . . . ." line199="                        . . . . . . . . . ." line200="                        . . . . . . . . . ." line201="                        . . . . . . . . . ." line202="                        . . . . . . . . . ." line203="                        . . . . . . . . . ." line204="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed,sprites.dungeon.hazardLava1,sprites.builtin.coral0], TileScale.Sixteen))" line205="                    break;" line206="                case 5:" line207="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101030101010101010101010004020101010101010100010101010101010101000101010101010101010004020101010101010100010101010101010101010101010101010101`, img`" line208="                        . . . . . . . . . ." line209="                        . . . . . . . . . ." line210="                        . . . . . . . . . ." line211="                        . . . . . . . . . ." line212="                        . . . . . . . . . ." line213="                        . . . . . . . . . ." line214="                        . . . . . . . . . ." line215="                        . . . . . . . . . ." line216="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed,sprites.dungeon.hazardLava1], TileScale.Sixteen))" line217="                    break;" line218="                case 6:" line219="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101030101010101010101010401010101010101010102010101010101010101050101010101010101010201010101010101010104010101010101010101020101010101010101`, img`" line220="                        . . . . . . . . . ." line221="                        . . . . . . . . . ." line222="                        . . . . . . . . . ." line223="                        . . . . . . . . . ." line224="                        . . . . . . . . . ." line225="                        . . . . . . . . . ." line226="                        . . . . . . . . . ." line227="                        . . . . . . . . . ." line228="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed,sprites.dungeon.hazardLava1,sprites.builtin.coral0], TileScale.Sixteen))" line229="                    break;" line230="                case 8:" line231="                    let L8random = randint(0, 3)" line232="                    switch (L8random){" line233="                        case 0:" line234="                        tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101010101010101010101010101010101010101010102010101010101010101000101010101010101010301010101010101010101010101010101010101010101010101`, img`" line235="                            . . . . . . . . . ." line236="                            . . . . . . . . . ." line237="                            . . . . . . . . . ." line238="                            . . . . . . . . . ." line239="                            . . . . . . . . . ." line240="                            . . . . . . . . . ." line241="                            . . . . . . . . . ." line242="                            . . . . . . . . . ." line243="                        `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.buttonTealDepressed,sprites.dungeon.collectibleInsignia], TileScale.Sixteen))" line244="                        break;" line245="                        case 1:" line246="                        tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101010101010101010101010101010101010101010102000301010101010101010101010101010101010101010101010101010101010101010101010101010101010101`, img`" line247="                            . . . . . . . . . ." line248="                            . . . . . . . . . ." line249="                            . . . . . . . . . ." line250="                            . . . . . . . . . ." line251="                            . . . . . . . . . ." line252="                            . . . . . . . . . ." line253="                            . . . . . . . . . ." line254="                            . . . . . . . . . ." line255="                        `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.buttonTealDepressed,sprites.dungeon.collectibleInsignia], TileScale.Sixteen))" line256="                        break;" line257="                        case 2:" line258="                        tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101030101010101010101010001010101010101010102010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101`, img`" line259="                            . . . . . . . . . ." line260="                            . . . . . . . . . ." line261="                            . . . . . . . . . ." line262="                            . . . . . . . . . ." line263="                            . . . . . . . . . ." line264="                            . . . . . . . . . ." line265="                            . . . . . . . . . ." line266="                            . . . . . . . . . ." line267="                        `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.buttonTealDepressed,sprites.dungeon.collectibleInsignia], TileScale.Sixteen))" line268="                        break;" line269="                        case 3:" line270="                        tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101010101010101010101010101010101010101030002010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101`, img`" line271="                            . . . . . . . . . ." line272="                            . . . . . . . . . ." line273="                            . . . . . . . . . ." line274="                            . . . . . . . . . ." line275="                            . . . . . . . . . ." line276="                            . . . . . . . . . ." line277="                            . . . . . . . . . ." line278="                            . . . . . . . . . ." line279="                        `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.buttonTealDepressed,sprites.dungeon.collectibleInsignia], TileScale.Sixteen))" line280="                        break;" line281="                    }" line282="                    break;" line283="                case 7:" line284="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101030000000100000001010101010001000100010100000000000001000101000101010101000001010000010201010100010100000100000000000101010101010101010101`, img`" line285="                        . . . . . . . . . ." line286="                        . . . . . . . . . ." line287="                        . . . . . . . . . ." line288="                        . . . . . . . . . ." line289="                        . . . . . . . . . ." line290="                        . . . . . . . . . ." line291="                        . . . . . . . . . ." line292="                        . . . . . . . . . ." line293="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed], TileScale.Sixteen))" line294="                    break;                   " line295="                case 9:" line296="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101030000000105050501010101010401050105010105050004040401050101050101010101000501010404010201010105010100000104040400000101010101010101010101`, img`" line297="                        . . . . . . . . . ." line298="                        . . . . . . . . . ." line299="                        . . . . . . . . . ." line300="                        . . . . . . . . . ." line301="                        . . . . . . . . . ." line302="                        . . . . . . . . . ." line303="                        . . . . . . . . . ." line304="                        . . . . . . . . . ." line305="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed,sprites.dungeon.hazardLava0,sprites.builtin.coral0], TileScale.Sixteen))" line306="                    break;  " line307="                    " line308="&#9;&#9;&#9;}    " line309="}" line310="" line311="" line312="//变量声明" line313="let gem: Sprite = null" line314="let gemsHero: Sprite = null" line315="let heroDirection = 0" line316="let gemsNum = 0 " line317="let level = 1" line318="let heroRow = 0" line319="let heroCol = 0" line320="heroDirection = 0" line321="export enum turnDirection{" line322="    left," line323="    right" line324="    }" line325="export enum magicKind{" line326="    fire ," line327="    ice" line328="}" line329="export enum obastaleKind{" line330="    lava ," line331="    plant" line332="}" line333="export let frontOfHero ={" line334="    //行" line335="    row:0," line336="    //列" line337="    col:0" line338="}" line339="" line340="" line341="//获取角色前方" line342="function getTheFrontOfHero():any{" line343="let addRow = 0" line344="let addCol = 0" line345=" if (heroDirection == 3) {" line346="        addCol += 1" line347="    } else if (heroDirection == 0) {" line348="        addRow += 1" line349="    } else if (heroDirection == 1) {" line350="        addCol += -1" line351="    } else if (heroDirection == 2) {" line352="        addRow += -1" line353="    }" line354="" line355="frontOfHero.row = heroRow+addRow" line356="frontOfHero.col = heroCol+addCol" line357="return frontOfHero" line358="}" line359="" line360="" line361="//初始化" line362="//%block" line363="//%group=&quot;Operate&quot;" line364="export function initGame(){ " line365="    gemsHero = sprites.create(img`" line366="    . . . . . . f f f f . . . . . ." line367="    . . . . f f f 2 2 f f f . . . ." line368="    . . . f f f 2 2 2 2 f f f . . ." line369="    . . f f f e e e e e e f f f . ." line370="    . . f f e 2 2 2 2 2 2 e e f . ." line371="    . . f e 2 f f f f f f 2 e f . ." line372="    . . f f f f e e e e f f f f . ." line373="    . f f e f b f 4 4 f b f e f f ." line374="    . f e e 4 1 f d d f 1 4 e e f ." line375="    . . f e e d d d d d d e e f . ." line376="    . . . f e e 4 4 4 4 e e f . . ." line377="    . . e 4 f 2 2 2 2 2 2 f 4 e . ." line378="    . . 4 d f 2 2 2 2 2 2 f d 4 . ." line379="    . . 4 4 f 4 4 5 5 4 4 f 4 4 . ." line380="    . . . . . f f f f f f . . . . ." line381="    . . . . . f f . . f f . . . . ." line382="`, SpriteKind.gemsPlayer)" line383="    level = game.askForNumber(&quot;set level(1-6)&quot;)" line384="    levelset(level)" line385="    tiles.placeOnRandomTile(gemsHero, img`" line386="        b b b b b b b b b b b b b b b b" line387="        b c b b b b b b b b b b b b c b" line388="        b b b c 6 6 6 6 6 6 6 6 c b b b" line389="        b b c 6 6 6 6 6 6 6 6 6 6 c b b" line390="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line391="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line392="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line393="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line394="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line395="        b b 9 6 6 6 6 6 6 6 6 6 6 9 b b" line396="        b b 9 6 6 6 6 6 6 6 6 6 6 9 b b" line397="        b b 6 9 6 6 6 6 6 6 6 6 9 6 b b" line398="        b b c 6 9 9 9 9 9 9 9 9 6 c b b" line399="        b b b c c c c c c c c c c b b b" line400="        b c b b b b b b b b b b b b c b" line401="        b b b b b b b b b b b b b b b b" line402="    `)" line403="    pause(500)" line404="    for (let 值 of tiles.getTilesByType(sprites.dungeon.collectibleInsignia)) {" line405="        gem = sprites.create(img`" line406="            . . . . . . . . . . . . . . . ." line407="            . . . . . . 4 4 4 4 . . . . . ." line408="            . . . . 4 4 4 5 5 4 4 4 . . . ." line409="            . . . 3 3 3 3 4 4 4 4 4 4 . . ." line410="            . . 4 3 3 3 3 2 2 2 1 1 4 4 . ." line411="            . . 3 3 3 3 3 2 2 2 1 1 5 4 . ." line412="            . 4 3 3 3 3 2 2 2 2 2 5 5 4 4 ." line413="            . 4 3 3 3 2 2 2 4 4 4 4 5 4 4 ." line414="            . 4 4 3 3 2 2 4 4 4 4 4 4 4 4 ." line415="            . 4 2 3 3 2 2 4 4 4 4 4 4 4 4 ." line416="            . . 4 2 3 3 2 4 4 4 4 4 2 4 . ." line417="            . . 4 2 2 3 2 2 4 4 4 2 4 4 . ." line418="            . . . 4 2 2 2 2 2 2 2 2 4 . . ." line419="            . . . . 4 4 2 2 2 2 4 4 . . . ." line420="            . . . . . . 4 4 4 4 . . . . . ." line421="            . . . . . . . . . . . . . . . ." line422="        `, SpriteKind.gemsKind)" line423="        tiles.placeOnTile(gem, 值)" line424="        gemsNum+=1" line425="        info.player1.setScore(gemsNum)" line426="    }" line427="    gemsHero.z = 1000" line428="    heroRow = gemsHero.y/16-0.5" line429="    heroCol = gemsHero.x/16-0.5" line430="    gemsHero.say(&quot;改程序前，先画流程图&quot;,3000)" line431="}" line432="" line433="//获得宝石" line434="//%block" line435="//%group=&quot;Operate&quot;" line436="export function takeGems(){" line437="    gemsHero.setKind(SpriteKind.getGemsKind)" line438="    pause(100)" line439="    music.baDing.play()" line440="    gemsHero.setFlag(SpriteFlag.Ghost, true)" line441="    gemsHero.y-=5" line442="    pause(100)" line443="    gemsHero.setKind(SpriteKind.gemsPlayer)" line444="    gemsHero.setFlag(SpriteFlag.Ghost, false)" line445="    gemsHero.y+=5" line446="    if(gemsNum==0){" line447="        game.over(true)" line448="    }" line449="}" line450="" line451="" line452="//施法" line453="function actionOfMagic(isIceMagic:boolean){" line454="" line455="    if(isIceMagic){" line456="        let magicCube = sprites.create(img`" line457="            . . . . . . . . . . . . . . . ." line458="            . . . . . . . . . . . . . . . ." line459="            . . . . . . . . . . . . . . . ." line460="            . . . . . . . . . . . . . . . ." line461="            . . . . . . . . . . . . . . . ." line462="            . . . . 8 8 8 8 8 8 8 . . . . ." line463="            . . . . 8 1 1 1 1 1 8 . . . . ." line464="            . . . . 8 1 1 1 1 1 8 . . . . ." line465="            . . . . 8 1 1 9 1 1 8 . . . . ." line466="            . . . . 8 1 1 1 1 1 8 . . . . ." line467="            . . . . 8 1 1 1 1 1 8 . . . . ." line468="            . . . . 8 8 8 8 8 8 8 . . . . ." line469="            . . . . . . . . . . . . . . . ." line470="            . . . . . . . . . . . . . . . ." line471="            . . . . . . . . . . . . . . . ." line472="            . . . . . . . . . . . . . . . ." line473="        `,SpriteKind.iceMagic)" line474="        tiles.placeOnTile(magicCube, tiles.getTileLocation(frontOfHero.col, frontOfHero.row))" line475="        pause(500)" line476="        magicCube.destroy(effects.coolRadial,500)" line477="    }" line478="    else{" line479="        let magicCube2 = sprites.create(img`" line480="            . . . . . . . . . . . . . . . ." line481="            . . . . . . . . . . . . . . . ." line482="            . . . . . . . . . . . . . . . ." line483="            . . . . . . . . . . . . . . . ." line484="            . . . . . . . . . . . . . . . ." line485="            . . . . 2 2 2 2 2 2 2 . . . . ." line486="            . . . . 2 5 5 5 5 5 2 . . . . ." line487="            . . . . 2 5 5 5 5 5 2 . . . . ." line488="            . . . . 2 5 5 4 5 5 2 . . . . ." line489="            . . . . 2 5 5 5 5 5 2 . . . . ." line490="            . . . . 2 5 5 5 5 5 2 . . . . ." line491="            . . . . 2 2 2 2 2 2 2 . . . . ." line492="            . . . . . . . . . . . . . . . ." line493="            . . . . . . . . . . . . . . . ." line494="            . . . . . . . . . . . . . . . ." line495="            . . . . . . . . . . . . . . . ." line496="        `,SpriteKind.fireMagic)" line497="        tiles.placeOnTile(magicCube2, tiles.getTileLocation(frontOfHero.col, frontOfHero.row))" line498="        pause(500)" line499="        magicCube2.destroy(effects.fire,500)" line500="    }" line501="}" line502="//使用魔法" line503="//%block=&quot;use %magicKind magic&quot;" line504="//%group=&quot;Operate&quot;" line505="export function useMagic(choice:magicKind){" line506="    getTheFrontOfHero()" line507="    switch(choice){" line508="        case magicKind.ice:" line509="        if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line510="            5 4 4 5 5 4 4 4 4 2 2 2 4 4 4 4" line511="            4 4 4 4 4 5 5 4 2 2 2 2 4 4 4 5" line512="            4 2 2 2 4 4 5 4 2 2 4 4 5 5 5 5" line513="            2 2 4 2 4 4 5 4 2 2 4 5 5 5 5 4" line514="            2 2 2 2 4 4 5 4 2 2 4 4 5 5 4 4" line515="            4 2 2 2 4 5 5 4 4 4 4 4 4 4 4 2" line516="            2 2 2 4 4 5 5 5 4 4 2 2 2 2 2 2" line517="            4 2 2 4 5 5 5 5 4 2 2 4 2 2 2 4" line518="            5 4 4 4 4 4 4 5 5 4 2 2 2 4 4 4" line519="            4 4 4 2 2 2 4 4 5 5 4 4 4 4 5 5" line520="            4 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5" line521="            5 4 4 2 4 2 2 4 4 5 5 5 4 4 4 5" line522="            5 5 4 2 2 2 4 4 4 5 5 4 2 2 2 4" line523="            4 5 4 4 4 4 5 5 5 5 4 2 4 2 2 4" line524="            4 5 5 5 5 5 5 4 4 4 2 4 2 4 2 4" line525="            4 5 5 5 4 4 4 4 2 2 2 2 4 2 4 4" line526="        `)){    " line527="            actionOfMagic(true)" line528="        }" line529="        else{" line530="            gemsHero.say(&quot;There is not hot lava need to be frozen!&quot;)" line531="        }" line532="        break" line533="        default:" line534="        if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line535="            . . . . . . c c . . . . . c c ." line536="            . . . c c . c 3 c . c c . c 3 c" line537="            . . c 3 6 c 3 3 c . c 3 c 6 3 c" line538="            . . c 3 3 3 3 6 c . c 3 6 3 3 c" line539="            . . . c 6 3 6 6 c c c 3 3 3 c ." line540="            . . . . c c 6 6 c 6 c 6 3 3 c ." line541="            . . . . c 3 c 6 c 3 3 c 6 6 c ." line542="            c c . c 3 3 c c c c 3 3 c 6 c ." line543="            c 3 c c 3 6 6 c 3 c 3 6 c 6 c ." line544="            c 3 3 6 3 6 3 6 3 3 3 c c c c c" line545="            . c 3 3 3 c 3 3 6 3 6 c c 3 3 c" line546="            . . c 3 3 c c 3 3 3 6 c 3 3 6 ." line547="            c c c 6 3 6 c c 6 3 6 6 3 6 c c" line548="            c 3 3 3 3 3 c c c 3 6 3 3 3 3 c" line549="            . c c 6 6 3 6 6 c 6 3 3 6 c c ." line550="            . . . c 6 3 3 6 6 6 6 3 c . . ." line551="        `)){    " line552="            actionOfMagic(false)" line553="        }else{" line554="            gemsHero.say(&quot;There is not poison plant need to be fired!&quot;)" line555="        }" line556="        break" line557="    }" line558="}" line559="    //判断前方障碍物" line560="    //%block=&quot;there is %obstaleKind ahead&quot;" line561="    //%group=&quot;Others&quot;" line562="    export function isObastaleAhead(choice:obastaleKind): boolean {" line563="        getTheFrontOfHero()" line564="        if(choice == obastaleKind.lava){" line565="            if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line566="                5 4 4 5 5 4 4 4 4 2 2 2 4 4 4 4" line567="                4 4 4 4 4 5 5 4 2 2 2 2 4 4 4 5" line568="                4 2 2 2 4 4 5 4 2 2 4 4 5 5 5 5" line569="                2 2 4 2 4 4 5 4 2 2 4 5 5 5 5 4" line570="                2 2 2 2 4 4 5 4 2 2 4 4 5 5 4 4" line571="                4 2 2 2 4 5 5 4 4 4 4 4 4 4 4 2" line572="                2 2 2 4 4 5 5 5 4 4 2 2 2 2 2 2" line573="                4 2 2 4 5 5 5 5 4 2 2 4 2 2 2 4" line574="                5 4 4 4 4 4 4 5 5 4 2 2 2 4 4 4" line575="                4 4 4 2 2 2 4 4 5 5 4 4 4 4 5 5" line576="                4 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5" line577="                5 4 4 2 4 2 2 4 4 5 5 5 4 4 4 5" line578="                5 5 4 2 2 2 4 4 4 5 5 4 2 2 2 4" line579="                4 5 4 4 4 4 5 5 5 5 4 2 4 2 2 4" line580="                4 5 5 5 5 5 5 4 4 4 2 4 2 4 2 4" line581="                4 5 5 5 4 4 4 4 2 2 2 2 4 2 4 4" line582="            `)){return true}return false}" line583="        else{if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line584="            . . . . . . c c . . . . . c c ." line585="            . . . c c . c 3 c . c c . c 3 c" line586="            . . c 3 6 c 3 3 c . c 3 c 6 3 c" line587="            . . c 3 3 3 3 6 c . c 3 6 3 3 c" line588="            . . . c 6 3 6 6 c c c 3 3 3 c ." line589="            . . . . c c 6 6 c 6 c 6 3 3 c ." line590="            . . . . c 3 c 6 c 3 3 c 6 6 c ." line591="            c c . c 3 3 c c c c 3 3 c 6 c ." line592="            c 3 c c 3 6 6 c 3 c 3 6 c 6 c ." line593="            c 3 3 6 3 6 3 6 3 3 3 c c c c c" line594="            . c 3 3 3 c 3 3 6 3 6 c c 3 3 c" line595="            . . c 3 3 c c 3 3 3 6 c 3 3 6 ." line596="            c c c 6 3 6 c c 6 3 6 6 3 6 c c" line597="            c 3 3 3 3 3 c c c 3 6 3 3 3 3 c" line598="            . c c 6 6 3 6 6 c 6 3 3 6 c c ." line599="            . . . c 6 3 3 6 6 6 6 3 c . . ." line600="        `)){return true}return false}" line601="    }" line602="    //判断前方障碍物" line603="    //%block=&quot;there is a wall ahead&quot;" line604="    //%group=&quot;Others&quot;" line605="    export function isWallAhead(): boolean {" line606="        getTheFrontOfHero()" line607="            if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line608="                . . . 6 6 6 6 6 6 6 6 6 6 . . ." line609="                . 6 6 7 7 7 7 7 7 7 7 7 7 6 6 ." line610="                . 6 7 7 7 7 7 7 7 7 7 7 7 7 6 ." line611="                6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6" line612="                6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6" line613="                6 7 6 7 7 7 7 7 7 7 7 7 7 6 7 6" line614="                8 6 7 7 7 7 7 7 7 7 7 7 7 7 6 8" line615="                8 7 7 7 7 7 7 7 7 7 7 7 7 7 7 8" line616="                6 7 6 7 7 7 6 7 7 7 7 6 7 7 7 6" line617="                6 8 6 7 7 6 7 7 7 6 7 7 6 6 8 6" line618="                8 6 6 7 6 6 7 7 6 6 6 7 6 6 6 8" line619="                8 6 8 6 6 6 7 6 6 6 6 6 8 6 6 8" line620="                8 8 6 6 8 6 6 6 8 6 6 6 8 8 8 8" line621="                . f 6 e e 8 6 6 8 8 6 8 8 8 f ." line622="                . . f e e e 6 e 8 8 f f 8 f . ." line623="                . . . f f f 8 e e f f f f . . ." line624="            `)){return true}return false}" line625="        " line626="            " line627="    " line628="" line629="    //转向" line630="    //%block=&quot;turn %turnDirection&quot;" line631="    //%group=&quot;Move&quot;" line632="    export function turn (choice: turnDirection) {" line633="    switch(choice){" line634="        case turnDirection.right:" line635="        heroDirection += 1" line636="        heroDirection = heroDirection % 4" line637="        break" line638="        default :" line639="        heroDirection += 3" line640="        heroDirection = heroDirection % 4" line641="        break" line642="    }" line643="    if (heroDirection == 3) {//向右" line644="        gemsHero.setImage(img`" line645="            . . . . . . f f f f f f . . . ." line646="            . . . . f f e e e e f 2 f . . ." line647="            . . . f f e e e e f 2 2 2 f . ." line648="            . . . f e e e f f e e e e f . ." line649="            . . . f f f f e e 2 2 2 2 e f ." line650="            . . . f e 2 2 2 f f f f e 2 f ." line651="            . . f f f f f f f e e e f f f ." line652="            . . f f e 4 4 e b f 4 4 e e f ." line653="            . . f e e 4 d 4 1 f d d e f . ." line654="            . . . f e e e 4 d d d d f . . ." line655="            . . . . f f e e 4 4 4 e f . . ." line656="            . . . . . 4 d d e 2 2 2 f . . ." line657="            . . . . . e d d e 2 2 2 f . . ." line658="            . . . . . f e e f 4 5 5 f . . ." line659="            . . . . . . f f f f f f . . . ." line660="            . . . . . . . f f f . . . . . ." line661="        `)" line662="    } else if (heroDirection == 0) {//向下" line663="        gemsHero.setImage(img`" line664="            . . . . . . f f f f . . . . . ." line665="            . . . . f f f 2 2 f f f . . . ." line666="            . . . f f f 2 2 2 2 f f f . . ." line667="            . . f f f e e e e e e f f f . ." line668="            . . f f e 2 2 2 2 2 2 e e f . ." line669="            . . f e 2 f f f f f f 2 e f . ." line670="            . . f f f f e e e e f f f f . ." line671="            . f f e f b f 4 4 f b f e f f ." line672="            . f e e 4 1 f d d f 1 4 e e f ." line673="            . . f e e d d d d d d e e f . ." line674="            . . . f e e 4 4 4 4 e e f . . ." line675="            . . e 4 f 2 2 2 2 2 2 f 4 e . ." line676="            . . 4 d f 2 2 2 2 2 2 f d 4 . ." line677="            . . 4 4 f 4 4 5 5 4 4 f 4 4 . ." line678="            . . . . . f f f f f f . . . . ." line679="            . . . . . f f . . f f . . . . ." line680="        `)" line681="    } else if (heroDirection == 1) {//向左" line682="        gemsHero.setImage(img`" line683="            . . . . f f f f f f . . . . . ." line684="            . . . f 2 f e e e e f f . . . ." line685="            . . f 2 2 2 f e e e e f f . . ." line686="            . . f e e e e f f e e e f . . ." line687="            . f e 2 2 2 2 e e f f f f . . ." line688="            . f 2 e f f f f 2 2 2 e f . . ." line689="            . f f f e e e f f f f f f f . ." line690="            . f e e 4 4 f b e 4 4 e f f . ." line691="            . . f e d d f 1 4 d 4 e e f . ." line692="            . . . f d d d d 4 e e e f . . ." line693="            . . . f e 4 4 4 e e f f . . . ." line694="            . . . f 2 2 2 e d d 4 . . . . ." line695="            . . . f 2 2 2 e d d e . . . . ." line696="            . . . f 5 5 4 f e e f . . . . ." line697="            . . . . f f f f f f . . . . . ." line698="            . . . . . . f f f . . . . . . ." line699="        `)" line700="    } else if (heroDirection == 2) {//向上" line701="        gemsHero.setImage(img`" line702="            . . . . . . f f f f . . . . . ." line703="            . . . . f f e e e e f f . . . ." line704="            . . . f e e e f f e e e f . . ." line705="            . . f f f f f 2 2 f f f f f . ." line706="            . . f f e 2 e 2 2 e 2 e f f . ." line707="            . . f e 2 f 2 f f 2 f 2 e f . ." line708="            . . f f f 2 2 e e 2 2 f f f . ." line709="            . f f e f 2 f e e f 2 f e f f ." line710="            . f e e f f e e e e f e e e f ." line711="            . . f e e e e e e e e e e f . ." line712="            . . . f e e e e e e e e f . . ." line713="            . . e 4 f f f f f f f f 4 e . ." line714="            . . 4 d f 2 2 2 2 2 2 f d 4 . ." line715="            . . 4 4 f 4 4 4 4 4 4 f 4 4 . ." line716="            . . . . . f f f f f f . . . . ." line717="            . . . . . f f . . f f . . . . ." line718="        `)" line719="    }" line720="    pause(500)" line721="}" line722="    //前进" line723="    //%block" line724="    //%group=&quot;Move&quot;" line725="    export function stepForward () {" line726="    if (heroDirection == 3) {" line727="        heroCol += 1" line728="    } else if (heroDirection == 0) {" line729="        heroRow += 1" line730="    } else if (heroDirection == 1) {" line731="        heroCol += -1" line732="    } else if (heroDirection == 2) {" line733="        heroRow += -1" line734="    }" line735="    tiles.placeOnTile(gemsHero, tiles.getTileLocation(heroCol, heroRow))" line736="    pause(500)" line737="}" line738="" line739="" line740="}" numlines="741"></mutation></block></statement></block></xml>