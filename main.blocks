<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable type="KIND_SpriteKind" id="YiEpTprKx1NKVL%g,(Vt">gemsPlayer</variable><variable type="KIND_SpriteKind" id="B2FE.,pBuwcFMg?ZKRD1">gemsCatcher</variable><variable type="KIND_SpriteKind" id="y9@QEtfWZ,adP{%n[|O/">gems</variable><variable type="KIND_SpriteKind" id="a54E6/9kxrzN`TkpLt?r">getGemsKind</variable><variable type="KIND_SpriteKind" id="6y`_eNijpx?.{l4oDW@d">gemsKind</variable><variable type="KIND_SpriteKind" id="?VhjuREm,rtCyoQ^0b}i">iceMagic</variable><variable type="KIND_SpriteKind" id="k%_3gspv;f$_KigJQlp*">fireMagic</variable></variables><block type="pxt-on-start" id="$5ia`E~S5|}/J{]bHe0T" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="G(IWDiRV`z%D6@@n%R*-" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace getgems {" line1="" line2="//角色碰到障碍物回退" line3="function goBack(){" line4=" if (heroDirection == 3) {" line5="        heroCol += -1" line6="    } else if (heroDirection == 0) {" line7="        heroRow += -1" line8="    } else if (heroDirection == 1) {" line9="        heroCol += 1" line10="    } else if (heroDirection == 2) {" line11="        heroRow += 1" line12="    }" line13="    scene.cameraShake(4, 500)" line14="    tiles.placeOnTile(gemsHero, tiles.getTileLocation(heroCol, heroRow))" line15="}" line16="//碰到墙回退" line17="scene.onOverlapTile(SpriteKind.gemsPlayer, sprites.builtin.forestTiles0, function (sprite, location) {" line18="   pause(500) " line19="   goBack()" line20="" line21="})" line22="//碰到熔岩" line23="scene.onOverlapTile(SpriteKind.gemsPlayer, img`" line24="    5 4 4 5 5 4 4 4 4 2 2 2 4 4 4 4" line25="    4 4 4 4 4 5 5 4 2 2 2 2 4 4 4 5" line26="    4 2 2 2 4 4 5 4 2 2 4 4 5 5 5 5" line27="    2 2 4 2 4 4 5 4 2 2 4 5 5 5 5 4" line28="    2 2 2 2 4 4 5 4 2 2 4 4 5 5 4 4" line29="    4 2 2 2 4 5 5 4 4 4 4 4 4 4 4 2" line30="    2 2 2 4 4 5 5 5 4 4 2 2 2 2 2 2" line31="    4 2 2 4 5 5 5 5 4 2 2 4 2 2 2 4" line32="    5 4 4 4 4 4 4 5 5 4 2 2 2 4 4 4" line33="    4 4 4 2 2 2 4 4 5 5 4 4 4 4 5 5" line34="    4 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5" line35="    5 4 4 2 4 2 2 4 4 5 5 5 4 4 4 5" line36="    5 5 4 2 2 2 4 4 4 5 5 4 2 2 2 4" line37="    4 5 4 4 4 4 5 5 5 5 4 2 4 2 2 4" line38="    4 5 5 5 5 5 5 4 4 4 2 4 2 4 2 4" line39="    4 5 5 5 4 4 4 4 2 2 2 2 4 2 4 4" line40="`, function(sprite: Sprite, location: tiles.Location) {" line41="    goBack()" line42="    gemsHero.say(&quot;there is lava ahead,I can not go!&quot;)" line43="" line44="})" line45="//碰到毒草" line46="scene.onOverlapTile(SpriteKind.gemsPlayer, img`" line47="    . . . . . . c c . . . . . c c ." line48="    . . . c c . c 3 c . c c . c 3 c" line49="    . . c 3 6 c 3 3 c . c 3 c 6 3 c" line50="    . . c 3 3 3 3 6 c . c 3 6 3 3 c" line51="    . . . c 6 3 6 6 c c c 3 3 3 c ." line52="    . . . . c c 6 6 c 6 c 6 3 3 c ." line53="    . . . . c 3 c 6 c 3 3 c 6 6 c ." line54="    c c . c 3 3 c c c c 3 3 c 6 c ." line55="    c 3 c c 3 6 6 c 3 c 3 6 c 6 c ." line56="    c 3 3 6 3 6 3 6 3 3 3 c c c c c" line57="    . c 3 3 3 c 3 3 6 3 6 c c 3 3 c" line58="    . . c 3 3 c c 3 3 3 6 c 3 3 6 ." line59="    c c c 6 3 6 c c 6 3 6 6 3 6 c c" line60="    c 3 3 3 3 3 c c c 3 6 3 3 3 3 c" line61="    . c c 6 6 3 6 6 c 6 3 3 6 c c ." line62="    . . . c 6 3 3 6 6 6 6 3 c . . ." line63="`, function(sprite: Sprite, location: tiles.Location) {" line64="    goBack()" line65="    gemsHero.say(&quot;There is poison plant,I can not go!&quot;)" line66="" line67="})" line68="" line69="//获得宝石事件" line70="sprites.onOverlap(SpriteKind.gemsCatcher, SpriteKind.gems, function(sprite: Sprite, otherSprite: Sprite) {" line71="    otherSprite.destroy()" line72="    info.player1.changeScoreBy(-1)" line73="})" line74="sprites.onOverlap(SpriteKind.getGemsKind, SpriteKind.gemsKind, function(sprite: Sprite, otherSprite: Sprite) {" line75="    otherSprite.destroy()" line76="    info.player1.changeScoreBy(-1)" line77="    gemsNum-=1" line78="})" line79="" line80="//关卡设定" line81="function levelset(level:number){" line82="   switch(level){" line83="&#9;&#9;&#9;&#9;case 1:" line84="                     tiles.setTilemap(tiles.createTilemap(hex`0a0008000202020202020202020202020202020202020202020202020202020202020202020102020202020202020203020202020202020202020202020202020202020202020202020202020202020202020202`, img`" line85="                         . . . . . . . . . ." line86="                         . . . . . . . . . ." line87="                         . . . . . . . . . ." line88="                         . . . . . . . . . ." line89="                         . . . . . . . . . ." line90="                         . . . . . . . . . ." line91="                         . . . . . . . . . ." line92="                         . . . . . . . . . ." line93="                     `, [myTiles.transparency16,sprites.dungeon.buttonTealDepressed,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia], TileScale.Sixteen))   " line94="&#9;&#9;&#9;&#9;&#9;break;" line95="&#9;&#9;&#9;&#9;case 2:" line96="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101010101010101010101000003000001010101010000010002010101010101010100010101010101010000000101010101010101010101010101010101010101010101`, img`" line97="                        . . . . . . . . . ." line98="                        . . . . . . . . . ." line99="                        . . . . . . . . . ." line100="                        . . . . . . . . . ." line101="                        . . . . . . . . . ." line102="                        . . . . . . . . . ." line103="                        . . . . . . . . . ." line104="                        . . . . . . . . . ." line105="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed], TileScale.Sixteen))" line106="                    break;" line107="&#9;&#9;&#9;&#9;case 3:" line108="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000301010101010201010100010101010100010101000101010101000101010001010101010001010100010101010100010101000101010101000101010200000000000201010101010101010101010101`, img`" line109="                        . . . . . . . . . ." line110="                        . . . . . . . . . ." line111="                        . . . . . . . . . ." line112="                        . . . . . . . . . ." line113="                        . . . . . . . . . ." line114="                        . . . . . . . . . ." line115="                        . . . . . . . . . ." line116="                        . . . . . . . . . ." line117="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed], TileScale.Sixteen))" line118="                    break;" line119="                case 4:" line120="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101010101010101010101000004020101010101010000010101010101020500000101010101010101000003010101010101010101010101010101010101010101010101`, img`" line121="                        . . . . . . . . . ." line122="                        . . . . . . . . . ." line123="                        . . . . . . . . . ." line124="                        . . . . . . . . . ." line125="                        . . . . . . . . . ." line126="                        . . . . . . . . . ." line127="                        . . . . . . . . . ." line128="                        . . . . . . . . . ." line129="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed,sprites.dungeon.hazardLava1,sprites.builtin.coral0], TileScale.Sixteen))" line130="                    break;" line131="                    " line132="&#9;&#9;&#9;}    " line133="}" line134="" line135="" line136="//变量声明" line137="let gem: Sprite = null" line138="let gemsHero: Sprite = null" line139="let heroDirection = 0" line140="let gemsNum = 0 " line141="let level = 1" line142="let heroRow = 0" line143="let heroCol = 0" line144="heroDirection = 0" line145="export enum turnDirection{" line146="    left," line147="    right" line148="    }" line149="export enum magicKind{" line150="    fire ," line151="    ice" line152="}" line153="// interface IspriteLocation{" line154="//     row:number," line155="//     col:number" line156="// }" line157="let frontOfHero ={" line158="    //行" line159="    row:0," line160="    //列" line161="    col:0" line162="}" line163="" line164="" line165="//获取角色前方" line166="function getTheFrontOfHero():any{" line167="let addRow = 0" line168="let addCol = 0" line169=" if (heroDirection == 3) {" line170="        addCol += 1" line171="    } else if (heroDirection == 0) {" line172="        addRow += 1" line173="    } else if (heroDirection == 1) {" line174="        addCol += -1" line175="    } else if (heroDirection == 2) {" line176="        addRow += -1" line177="    }" line178="" line179="frontOfHero.row = heroRow+addRow" line180="frontOfHero.col = heroCol+addCol" line181="let testnum =frontOfHero.row" line182="return frontOfHero" line183="}" line184="" line185="" line186="//初始化" line187="//%block" line188="//%group=&quot;Operate&quot;" line189="export function initGame(){ " line190="    gemsHero = sprites.create(img`" line191="    . . . . . . f f f f . . . . . ." line192="    . . . . f f f 2 2 f f f . . . ." line193="    . . . f f f 2 2 2 2 f f f . . ." line194="    . . f f f e e e e e e f f f . ." line195="    . . f f e 2 2 2 2 2 2 e e f . ." line196="    . . f e 2 f f f f f f 2 e f . ." line197="    . . f f f f e e e e f f f f . ." line198="    . f f e f b f 4 4 f b f e f f ." line199="    . f e e 4 1 f d d f 1 4 e e f ." line200="    . . f e e d d d d d d e e f . ." line201="    . . . f e e 4 4 4 4 e e f . . ." line202="    . . e 4 f 2 2 2 2 2 2 f 4 e . ." line203="    . . 4 d f 2 2 2 2 2 2 f d 4 . ." line204="    . . 4 4 f 4 4 5 5 4 4 f 4 4 . ." line205="    . . . . . f f f f f f . . . . ." line206="    . . . . . f f . . f f . . . . ." line207="`, SpriteKind.gemsPlayer)" line208="    level = game.askForNumber(&quot;set level(1-6)&quot;)" line209="    levelset(level)" line210="    tiles.placeOnRandomTile(gemsHero, img`" line211="        b b b b b b b b b b b b b b b b" line212="        b c b b b b b b b b b b b b c b" line213="        b b b c 6 6 6 6 6 6 6 6 c b b b" line214="        b b c 6 6 6 6 6 6 6 6 6 6 c b b" line215="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line216="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line217="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line218="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line219="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line220="        b b 9 6 6 6 6 6 6 6 6 6 6 9 b b" line221="        b b 9 6 6 6 6 6 6 6 6 6 6 9 b b" line222="        b b 6 9 6 6 6 6 6 6 6 6 9 6 b b" line223="        b b c 6 9 9 9 9 9 9 9 9 6 c b b" line224="        b b b c c c c c c c c c c b b b" line225="        b c b b b b b b b b b b b b c b" line226="        b b b b b b b b b b b b b b b b" line227="    `)" line228="    pause(500)" line229="    for (let 值 of tiles.getTilesByType(sprites.dungeon.collectibleInsignia)) {" line230="        gem = sprites.create(img`" line231="            . . . . . . . . . . . . . . . ." line232="            . . . . . . 4 4 4 4 . . . . . ." line233="            . . . . 4 4 4 5 5 4 4 4 . . . ." line234="            . . . 3 3 3 3 4 4 4 4 4 4 . . ." line235="            . . 4 3 3 3 3 2 2 2 1 1 4 4 . ." line236="            . . 3 3 3 3 3 2 2 2 1 1 5 4 . ." line237="            . 4 3 3 3 3 2 2 2 2 2 5 5 4 4 ." line238="            . 4 3 3 3 2 2 2 4 4 4 4 5 4 4 ." line239="            . 4 4 3 3 2 2 4 4 4 4 4 4 4 4 ." line240="            . 4 2 3 3 2 2 4 4 4 4 4 4 4 4 ." line241="            . . 4 2 3 3 2 4 4 4 4 4 2 4 . ." line242="            . . 4 2 2 3 2 2 4 4 4 2 4 4 . ." line243="            . . . 4 2 2 2 2 2 2 2 2 4 . . ." line244="            . . . . 4 4 2 2 2 2 4 4 . . . ." line245="            . . . . . . 4 4 4 4 . . . . . ." line246="            . . . . . . . . . . . . . . . ." line247="        `, SpriteKind.gemsKind)" line248="        tiles.placeOnTile(gem, 值)" line249="        gemsNum+=1" line250="        info.player1.setScore(gemsNum)" line251="    }" line252="    gemsHero.z = 1000" line253="    heroRow = gemsHero.y/16-0.5" line254="    heroCol = gemsHero.x/16-0.5" line255="    gemsHero.say(&quot;改程序前，先画流程图&quot;)" line256="}" line257="" line258="//获得宝石" line259="//%block" line260="//%group=&quot;Operate&quot;" line261="export function takeGems(){" line262="    gemsHero.setKind(SpriteKind.getGemsKind)" line263="    pause(100)" line264="    music.baDing.play()" line265="    gemsHero.setFlag(SpriteFlag.Ghost, true)" line266="    gemsHero.y-=5" line267="    pause(100)" line268="    gemsHero.setKind(SpriteKind.gemsPlayer)" line269="    gemsHero.setFlag(SpriteFlag.Ghost, false)" line270="    gemsHero.y+=5" line271="    if(gemsNum==0){" line272="        game.over(true)" line273="    }" line274="}" line275="" line276="" line277="//施法" line278="function actionOfMagic(isIceMagic:boolean){" line279="" line280="    if(isIceMagic){" line281="        let magicCube = sprites.create(img`" line282="            . . . . . . . . . . . . . . . ." line283="            . . . . . . . . . . . . . . . ." line284="            . . . . . . . . . . . . . . . ." line285="            . . . . . . . . . . . . . . . ." line286="            . . . . . . . . . . . . . . . ." line287="            . . . . 8 8 8 8 8 8 8 . . . . ." line288="            . . . . 8 1 1 1 1 1 8 . . . . ." line289="            . . . . 8 1 1 1 1 1 8 . . . . ." line290="            . . . . 8 1 1 9 1 1 8 . . . . ." line291="            . . . . 8 1 1 1 1 1 8 . . . . ." line292="            . . . . 8 1 1 1 1 1 8 . . . . ." line293="            . . . . 8 8 8 8 8 8 8 . . . . ." line294="            . . . . . . . . . . . . . . . ." line295="            . . . . . . . . . . . . . . . ." line296="            . . . . . . . . . . . . . . . ." line297="            . . . . . . . . . . . . . . . ." line298="        `,SpriteKind.iceMagic)" line299="        tiles.placeOnTile(magicCube, tiles.getTileLocation(frontOfHero.col, frontOfHero.row))" line300="        pause(500)" line301="        magicCube.destroy(effects.coolRadial,500)" line302="    }" line303="    else{" line304="        let magicCube2 = sprites.create(img`" line305="            . . . . . . . . . . . . . . . ." line306="            . . . . . . . . . . . . . . . ." line307="            . . . . . . . . . . . . . . . ." line308="            . . . . . . . . . . . . . . . ." line309="            . . . . . . . . . . . . . . . ." line310="            . . . . 2 2 2 2 2 2 2 . . . . ." line311="            . . . . 2 5 5 5 5 5 2 . . . . ." line312="            . . . . 2 5 5 5 5 5 2 . . . . ." line313="            . . . . 2 5 5 4 5 5 2 . . . . ." line314="            . . . . 2 5 5 5 5 5 2 . . . . ." line315="            . . . . 2 5 5 5 5 5 2 . . . . ." line316="            . . . . 2 2 2 2 2 2 2 . . . . ." line317="            . . . . . . . . . . . . . . . ." line318="            . . . . . . . . . . . . . . . ." line319="            . . . . . . . . . . . . . . . ." line320="            . . . . . . . . . . . . . . . ." line321="        `,SpriteKind.iceMagic)" line322="        tiles.placeOnTile(magicCube2, tiles.getTileLocation(frontOfHero.col, frontOfHero.row))" line323="        pause(500)" line324="        magicCube2.destroy(effects.fire,500)" line325="    }" line326="}" line327="//使用魔法" line328="//%block=&quot;use %magicKind magic&quot;" line329="//%group=&quot;Operate&quot;" line330="export function useMagic(choice:magicKind){" line331="    getTheFrontOfHero()" line332="    switch(choice){" line333="        case magicKind.ice:" line334="        if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line335="            5 4 4 5 5 4 4 4 4 2 2 2 4 4 4 4" line336="            4 4 4 4 4 5 5 4 2 2 2 2 4 4 4 5" line337="            4 2 2 2 4 4 5 4 2 2 4 4 5 5 5 5" line338="            2 2 4 2 4 4 5 4 2 2 4 5 5 5 5 4" line339="            2 2 2 2 4 4 5 4 2 2 4 4 5 5 4 4" line340="            4 2 2 2 4 5 5 4 4 4 4 4 4 4 4 2" line341="            2 2 2 4 4 5 5 5 4 4 2 2 2 2 2 2" line342="            4 2 2 4 5 5 5 5 4 2 2 4 2 2 2 4" line343="            5 4 4 4 4 4 4 5 5 4 2 2 2 4 4 4" line344="            4 4 4 2 2 2 4 4 5 5 4 4 4 4 5 5" line345="            4 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5" line346="            5 4 4 2 4 2 2 4 4 5 5 5 4 4 4 5" line347="            5 5 4 2 2 2 4 4 4 5 5 4 2 2 2 4" line348="            4 5 4 4 4 4 5 5 5 5 4 2 4 2 2 4" line349="            4 5 5 5 5 5 5 4 4 4 2 4 2 4 2 4" line350="            4 5 5 5 4 4 4 4 2 2 2 2 4 2 4 4" line351="        `)){    " line352="            actionOfMagic(true)" line353="            let testnum2 =frontOfHero.row" line354="        }" line355="        else{" line356="            gemsHero.say(&quot;There is not hot lava need to be frozen!&quot;)" line357="        }" line358="        break" line359="        default:" line360="        if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line361="            . . . . . . c c . . . . . c c ." line362="            . . . c c . c 3 c . c c . c 3 c" line363="            . . c 3 6 c 3 3 c . c 3 c 6 3 c" line364="            . . c 3 3 3 3 6 c . c 3 6 3 3 c" line365="            . . . c 6 3 6 6 c c c 3 3 3 c ." line366="            . . . . c c 6 6 c 6 c 6 3 3 c ." line367="            . . . . c 3 c 6 c 3 3 c 6 6 c ." line368="            c c . c 3 3 c c c c 3 3 c 6 c ." line369="            c 3 c c 3 6 6 c 3 c 3 6 c 6 c ." line370="            c 3 3 6 3 6 3 6 3 3 3 c c c c c" line371="            . c 3 3 3 c 3 3 6 3 6 c c 3 3 c" line372="            . . c 3 3 c c 3 3 3 6 c 3 3 6 ." line373="            c c c 6 3 6 c c 6 3 6 6 3 6 c c" line374="            c 3 3 3 3 3 c c c 3 6 3 3 3 3 c" line375="            . c c 6 6 3 6 6 c 6 3 3 6 c c ." line376="            . . . c 6 3 3 6 6 6 6 3 c . . ." line377="        `)){    " line378="            actionOfMagic(false)" line379="        }else{" line380="            let test1 = frontOfHero.col" line381="            let test2 = frontOfHero.col" line382="            gemsHero.say(&quot;There is not poison plant need to be fired!&quot;)" line383="        }" line384="        break" line385="    }" line386="}" line387="" line388="    //转向" line389="    //%block=&quot;turn %turnDirection&quot;" line390="    //%group=&quot;Move&quot;" line391="    export function turn (choice: turnDirection) {" line392="    switch(choice){" line393="        case turnDirection.right:" line394="        heroDirection += 1" line395="        heroDirection = heroDirection % 4" line396="        break" line397="        default :" line398="        heroDirection += 3" line399="        heroDirection = heroDirection % 4" line400="        break" line401="    }" line402="    if (heroDirection == 3) {//向右" line403="        gemsHero.setImage(img`" line404="            . . . . . . f f f f f f . . . ." line405="            . . . . f f e e e e f 2 f . . ." line406="            . . . f f e e e e f 2 2 2 f . ." line407="            . . . f e e e f f e e e e f . ." line408="            . . . f f f f e e 2 2 2 2 e f ." line409="            . . . f e 2 2 2 f f f f e 2 f ." line410="            . . f f f f f f f e e e f f f ." line411="            . . f f e 4 4 e b f 4 4 e e f ." line412="            . . f e e 4 d 4 1 f d d e f . ." line413="            . . . f e e e 4 d d d d f . . ." line414="            . . . . f f e e 4 4 4 e f . . ." line415="            . . . . . 4 d d e 2 2 2 f . . ." line416="            . . . . . e d d e 2 2 2 f . . ." line417="            . . . . . f e e f 4 5 5 f . . ." line418="            . . . . . . f f f f f f . . . ." line419="            . . . . . . . f f f . . . . . ." line420="        `)" line421="    } else if (heroDirection == 0) {//向下" line422="        gemsHero.setImage(img`" line423="            . . . . . . f f f f . . . . . ." line424="            . . . . f f f 2 2 f f f . . . ." line425="            . . . f f f 2 2 2 2 f f f . . ." line426="            . . f f f e e e e e e f f f . ." line427="            . . f f e 2 2 2 2 2 2 e e f . ." line428="            . . f e 2 f f f f f f 2 e f . ." line429="            . . f f f f e e e e f f f f . ." line430="            . f f e f b f 4 4 f b f e f f ." line431="            . f e e 4 1 f d d f 1 4 e e f ." line432="            . . f e e d d d d d d e e f . ." line433="            . . . f e e 4 4 4 4 e e f . . ." line434="            . . e 4 f 2 2 2 2 2 2 f 4 e . ." line435="            . . 4 d f 2 2 2 2 2 2 f d 4 . ." line436="            . . 4 4 f 4 4 5 5 4 4 f 4 4 . ." line437="            . . . . . f f f f f f . . . . ." line438="            . . . . . f f . . f f . . . . ." line439="        `)" line440="    } else if (heroDirection == 1) {//向左" line441="        gemsHero.setImage(img`" line442="            . . . . f f f f f f . . . . . ." line443="            . . . f 2 f e e e e f f . . . ." line444="            . . f 2 2 2 f e e e e f f . . ." line445="            . . f e e e e f f e e e f . . ." line446="            . f e 2 2 2 2 e e f f f f . . ." line447="            . f 2 e f f f f 2 2 2 e f . . ." line448="            . f f f e e e f f f f f f f . ." line449="            . f e e 4 4 f b e 4 4 e f f . ." line450="            . . f e d d f 1 4 d 4 e e f . ." line451="            . . . f d d d d 4 e e e f . . ." line452="            . . . f e 4 4 4 e e f f . . . ." line453="            . . . f 2 2 2 e d d 4 . . . . ." line454="            . . . f 2 2 2 e d d e . . . . ." line455="            . . . f 5 5 4 f e e f . . . . ." line456="            . . . . f f f f f f . . . . . ." line457="            . . . . . . f f f . . . . . . ." line458="        `)" line459="    } else if (heroDirection == 2) {//向上" line460="        gemsHero.setImage(img`" line461="            . . . . . . f f f f . . . . . ." line462="            . . . . f f e e e e f f . . . ." line463="            . . . f e e e f f e e e f . . ." line464="            . . f f f f f 2 2 f f f f f . ." line465="            . . f f e 2 e 2 2 e 2 e f f . ." line466="            . . f e 2 f 2 f f 2 f 2 e f . ." line467="            . . f f f 2 2 e e 2 2 f f f . ." line468="            . f f e f 2 f e e f 2 f e f f ." line469="            . f e e f f e e e e f e e e f ." line470="            . . f e e e e e e e e e e f . ." line471="            . . . f e e e e e e e e f . . ." line472="            . . e 4 f f f f f f f f 4 e . ." line473="            . . 4 d f 2 2 2 2 2 2 f d 4 . ." line474="            . . 4 4 f 4 4 4 4 4 4 f 4 4 . ." line475="            . . . . . f f f f f f . . . . ." line476="            . . . . . f f . . f f . . . . ." line477="        `)" line478="    }" line479="    pause(500)" line480="}" line481="    //前进" line482="    //%block" line483="    //%group=&quot;Move&quot;" line484="    export function stepForward () {" line485="    if (heroDirection == 3) {" line486="        heroCol += 1" line487="    } else if (heroDirection == 0) {" line488="        heroRow += 1" line489="    } else if (heroDirection == 1) {" line490="        heroCol += -1" line491="    } else if (heroDirection == 2) {" line492="        heroRow += -1" line493="    }" line494="    tiles.placeOnTile(gemsHero, tiles.getTileLocation(heroCol, heroRow))" line495="    pause(500)" line496="}" line497="" line498="" line499="}" numlines="500"></mutation><next><block type="getgems_initGame" id="6!;ze/_wFD=j}95gTS#["/></next></block></statement></block><block type="keyonevent" id="B_w0AfC;$b1t8Axry-!Q" x="10" y="16690"><field name="button">controller.A</field><field name="event">ControllerButtonEvent.Pressed</field><statement name="HANDLER"><block type="getgems_stepForward" id="`0eRAz$1/AEPzL/DtvP#"/></statement></block><block type="keyonevent" id="|*U*LfPdD?.vM4^%aXM`" x="250" y="16690"><field name="button">controller.B</field><field name="event">ControllerButtonEvent.Pressed</field><statement name="HANDLER"><block type="getgems_turn" id="_r*Rt+XRr^GSJpw^91eH"><field name="turnDirection">getgems.turnDirection.left</field></block></statement></block><block type="keyonevent" id="k=Fn1O6a#YaS6J`k!P5n" x="200" y="20220"><field name="button">controller.menu</field><field name="event">ControllerButtonEvent.Pressed</field><statement name="HANDLER"><block type="getgems_useMagic" id="V(b71Mk0c1$jzO-,2~5W"><field name="magicKind">getgems.magicKind.fire</field></block></statement></block></xml>