<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable type="KIND_SpriteKind" id="wp/$}2jUEEDQy8=%Hl]A">gemsPlayer</variable><variable type="KIND_SpriteKind" id="(3L80*~;`:{NrgpLSL?5">gems</variable><variable type="KIND_SpriteKind" id="Yo-2B8ssAWB=y`XE@tsS">getGemsKind</variable><variable type="KIND_SpriteKind" id="{c6Sv:RR8Vri^3glTs/m">gemsKind</variable><variable type="KIND_SpriteKind" id="KF5%e2!yv%%T67vc.~!1">iceMagic</variable><variable type="KIND_SpriteKind" id="Gx6wE7kds:zn3I1~:tCT">fireMagic</variable></variables><block type="pxt-on-start" id="7z~D9ZeM^+HwDXpoQX5L" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="h2_qgZdHW?JT*I2o~EEt" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace getgems {" line1="" line2="//角色碰到障碍物回退" line3="function goBack(){" line4=" if (heroDirection == 3) {" line5="        heroCol += -1" line6="    } else if (heroDirection == 0) {" line7="        heroRow += -1" line8="    } else if (heroDirection == 1) {" line9="        heroCol += 1" line10="    } else if (heroDirection == 2) {" line11="        heroRow += 1" line12="    }" line13="    scene.cameraShake(4, 500)" line14="    tiles.placeOnTile(gemsHero, tiles.getTileLocation(heroCol, heroRow))" line15="}" line16="" line17="//事件注册" line18="//魔法消除障碍物碰撞事件" line19="scene.onOverlapTile(SpriteKind.fireMagic, img`" line20="    . . . . . . c c . . . . . c c ." line21="    . . . c c . c 3 c . c c . c 3 c" line22="    . . c 3 6 c 3 3 c . c 3 c 6 3 c" line23="    . . c 3 3 3 3 6 c . c 3 6 3 3 c" line24="    . . . c 6 3 6 6 c c c 3 3 3 c ." line25="    . . . . c c 6 6 c 6 c 6 3 3 c ." line26="    . . . . c 3 c 6 c 3 3 c 6 6 c ." line27="    c c . c 3 3 c c c c 3 3 c 6 c ." line28="    c 3 c c 3 6 6 c 3 c 3 6 c 6 c ." line29="    c 3 3 6 3 6 3 6 3 3 3 c c c c c" line30="    . c 3 3 3 c 3 3 6 3 6 c c 3 3 c" line31="    . . c 3 3 c c 3 3 3 6 c 3 3 6 ." line32="    c c c 6 3 6 c c 6 3 6 6 3 6 c c" line33="    c 3 3 3 3 3 c c c 3 6 3 3 3 3 c" line34="    . c c 6 6 3 6 6 c 6 3 3 6 c c ." line35="    . . . c 6 3 3 6 6 6 6 3 c . . ." line36="`, function(sprite: Sprite, location: tiles.Location) {" line37="    tiles.setTileAt(tiles.getTileLocation(location.col,location.row), img`" line38="        . . . . . . . . . . . . . . . ." line39="        . . . . . . . . . . . . . . . ." line40="        . . . . . . . . . . . . . . . ." line41="        . . . . . . . . . . . . . . . ." line42="        . . . . . . . . . . . . . . . ." line43="        . . . . . . . . . . . . . . . ." line44="        . . . . . . . . . . . . . . . ." line45="        . . . . . . . . . . . . . . . ." line46="        . . . . . . . . . . . . . . . ." line47="        . . . . . . . . . . . . . . . ." line48="        . . . . . . . . . . . . . . . ." line49="        . . . . . . . . . . . . . . . ." line50="        . . . . . . . . . . . . . . . ." line51="        . . . . . . . . . . . . . . . ." line52="        . . . . . . . . . . . . . . . ." line53="        . . . . . . . . . . . . . . . ." line54="    `)" line55="})" line56="scene.onOverlapTile(SpriteKind.iceMagic, img`" line57="    5 4 4 5 5 4 4 4 4 2 2 2 4 4 4 4" line58="    4 4 4 4 4 5 5 4 2 2 2 2 4 4 4 5" line59="    4 2 2 2 4 4 5 4 2 2 4 4 5 5 5 5" line60="    2 2 4 2 4 4 5 4 2 2 4 5 5 5 5 4" line61="    2 2 2 2 4 4 5 4 2 2 4 4 5 5 4 4" line62="    4 2 2 2 4 5 5 4 4 4 4 4 4 4 4 2" line63="    2 2 2 4 4 5 5 5 4 4 2 2 2 2 2 2" line64="    4 2 2 4 5 5 5 5 4 2 2 4 2 2 2 4" line65="    5 4 4 4 4 4 4 5 5 4 2 2 2 4 4 4" line66="    4 4 4 2 2 2 4 4 5 5 4 4 4 4 5 5" line67="    4 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5" line68="    5 4 4 2 4 2 2 4 4 5 5 5 4 4 4 5" line69="    5 5 4 2 2 2 4 4 4 5 5 4 2 2 2 4" line70="    4 5 4 4 4 4 5 5 5 5 4 2 4 2 2 4" line71="    4 5 5 5 5 5 5 4 4 4 2 4 2 4 2 4" line72="    4 5 5 5 4 4 4 4 2 2 2 2 4 2 4 4" line73="`, function(sprite: Sprite, location: tiles.Location) {" line74="    tiles.setTileAt(tiles.getTileLocation(location.col,location.row), img`" line75="        . . . . . . . . . . . . . . . ." line76="        . . . . . . . . . . . . . . . ." line77="        . . . . . . . . . . . . . . . ." line78="        . . . . . . . . . . . . . . . ." line79="        . . . . . . . . . . . . . . . ." line80="        . . . . . . . . . . . . . . . ." line81="        . . . . . . . . . . . . . . . ." line82="        . . . . . . . . . . . . . . . ." line83="        . . . . . . . . . . . . . . . ." line84="        . . . . . . . . . . . . . . . ." line85="        . . . . . . . . . . . . . . . ." line86="        . . . . . . . . . . . . . . . ." line87="        . . . . . . . . . . . . . . . ." line88="        . . . . . . . . . . . . . . . ." line89="        . . . . . . . . . . . . . . . ." line90="        . . . . . . . . . . . . . . . ." line91="    `)" line92="})" line93="" line94="//碰到墙回退" line95="scene.onOverlapTile(SpriteKind.gemsPlayer, sprites.builtin.forestTiles0, function (sprite, location) {" line96="   pause(500) " line97="   goBack()" line98="" line99="})" line100="//碰到熔岩" line101="scene.onOverlapTile(SpriteKind.gemsPlayer, img`" line102="    5 4 4 5 5 4 4 4 4 2 2 2 4 4 4 4" line103="    4 4 4 4 4 5 5 4 2 2 2 2 4 4 4 5" line104="    4 2 2 2 4 4 5 4 2 2 4 4 5 5 5 5" line105="    2 2 4 2 4 4 5 4 2 2 4 5 5 5 5 4" line106="    2 2 2 2 4 4 5 4 2 2 4 4 5 5 4 4" line107="    4 2 2 2 4 5 5 4 4 4 4 4 4 4 4 2" line108="    2 2 2 4 4 5 5 5 4 4 2 2 2 2 2 2" line109="    4 2 2 4 5 5 5 5 4 2 2 4 2 2 2 4" line110="    5 4 4 4 4 4 4 5 5 4 2 2 2 4 4 4" line111="    4 4 4 2 2 2 4 4 5 5 4 4 4 4 5 5" line112="    4 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5" line113="    5 4 4 2 4 2 2 4 4 5 5 5 4 4 4 5" line114="    5 5 4 2 2 2 4 4 4 5 5 4 2 2 2 4" line115="    4 5 4 4 4 4 5 5 5 5 4 2 4 2 2 4" line116="    4 5 5 5 5 5 5 4 4 4 2 4 2 4 2 4" line117="    4 5 5 5 4 4 4 4 2 2 2 2 4 2 4 4" line118="`, function(sprite: Sprite, location: tiles.Location) {" line119="    goBack()" line120="    gemsHero.say(&quot;there is lava ahead,I can not go!&quot;)" line121="" line122="})" line123="//碰到毒草" line124="scene.onOverlapTile(SpriteKind.gemsPlayer, img`" line125="    . . . . . . c c . . . . . c c ." line126="    . . . c c . c 3 c . c c . c 3 c" line127="    . . c 3 6 c 3 3 c . c 3 c 6 3 c" line128="    . . c 3 3 3 3 6 c . c 3 6 3 3 c" line129="    . . . c 6 3 6 6 c c c 3 3 3 c ." line130="    . . . . c c 6 6 c 6 c 6 3 3 c ." line131="    . . . . c 3 c 6 c 3 3 c 6 6 c ." line132="    c c . c 3 3 c c c c 3 3 c 6 c ." line133="    c 3 c c 3 6 6 c 3 c 3 6 c 6 c ." line134="    c 3 3 6 3 6 3 6 3 3 3 c c c c c" line135="    . c 3 3 3 c 3 3 6 3 6 c c 3 3 c" line136="    . . c 3 3 c c 3 3 3 6 c 3 3 6 ." line137="    c c c 6 3 6 c c 6 3 6 6 3 6 c c" line138="    c 3 3 3 3 3 c c c 3 6 3 3 3 3 c" line139="    . c c 6 6 3 6 6 c 6 3 3 6 c c ." line140="    . . . c 6 3 3 6 6 6 6 3 c . . ." line141="`, function(sprite: Sprite, location: tiles.Location) {" line142="    goBack()" line143="    gemsHero.say(&quot;There is poison plant,I can not go!&quot;)" line144="" line145="})" line146="" line147="//获得宝石事件" line148="" line149="sprites.onOverlap(SpriteKind.getGemsKind, SpriteKind.gemsKind, function(sprite: Sprite, otherSprite: Sprite) {" line150="    otherSprite.destroy()" line151="    info.player1.changeScoreBy(-1)" line152="    gemsNum-=1" line153="})" line154="" line155="//关卡设定" line156="function levelset(level:number){" line157="   switch(level){" line158="&#9;&#9;&#9;&#9;case 1:" line159="                     tiles.setTilemap(tiles.createTilemap(hex`0a0008000202020202020202020202020202020202020202020202020202020202020202020102020202020202020203020202020202020202020202020202020202020202020202020202020202020202020202`, img`" line160="                         . . . . . . . . . ." line161="                         . . . . . . . . . ." line162="                         . . . . . . . . . ." line163="                         . . . . . . . . . ." line164="                         . . . . . . . . . ." line165="                         . . . . . . . . . ." line166="                         . . . . . . . . . ." line167="                         . . . . . . . . . ." line168="                     `, [myTiles.transparency16,sprites.dungeon.buttonTealDepressed,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia], TileScale.Sixteen))   " line169="&#9;&#9;&#9;&#9;&#9;break;" line170="&#9;&#9;&#9;&#9;case 2:" line171="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101010101010101010101000003000001010101010000010002010101010101010100010101010101010000000101010101010101010101010101010101010101010101`, img`" line172="                        . . . . . . . . . ." line173="                        . . . . . . . . . ." line174="                        . . . . . . . . . ." line175="                        . . . . . . . . . ." line176="                        . . . . . . . . . ." line177="                        . . . . . . . . . ." line178="                        . . . . . . . . . ." line179="                        . . . . . . . . . ." line180="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed], TileScale.Sixteen))" line181="                    break;" line182="&#9;&#9;&#9;&#9;case 3:" line183="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000301010101010201010100010101010100010101000101010101000101010001010101010001010100010101010100010101000101010101000101010200000000000201010101010101010101010101`, img`" line184="                        . . . . . . . . . ." line185="                        . . . . . . . . . ." line186="                        . . . . . . . . . ." line187="                        . . . . . . . . . ." line188="                        . . . . . . . . . ." line189="                        . . . . . . . . . ." line190="                        . . . . . . . . . ." line191="                        . . . . . . . . . ." line192="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed], TileScale.Sixteen))" line193="                    break;" line194="                case 4:" line195="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101010101010101010101000004020101010101010000010101010101020500000101010101010101000003010101010101010101010101010101010101010101010101`, img`" line196="                        . . . . . . . . . ." line197="                        . . . . . . . . . ." line198="                        . . . . . . . . . ." line199="                        . . . . . . . . . ." line200="                        . . . . . . . . . ." line201="                        . . . . . . . . . ." line202="                        . . . . . . . . . ." line203="                        . . . . . . . . . ." line204="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed,sprites.dungeon.hazardLava1,sprites.builtin.coral0], TileScale.Sixteen))" line205="                    break;" line206="                case 5:" line207="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101030101010101010101010004020101010101010100010101010101010101000101010101010101010004020101010101010100010101010101010101010101010101010101`, img`" line208="                        . . . . . . . . . ." line209="                        . . . . . . . . . ." line210="                        . . . . . . . . . ." line211="                        . . . . . . . . . ." line212="                        . . . . . . . . . ." line213="                        . . . . . . . . . ." line214="                        . . . . . . . . . ." line215="                        . . . . . . . . . ." line216="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed,sprites.dungeon.hazardLava1], TileScale.Sixteen))" line217="                    break;" line218="                case 6:" line219="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101030101010101010101010401010101010101010102010101010101010101050101010101010101010201010101010101010104010101010101010101020101010101010101`, img`" line220="                        . . . . . . . . . ." line221="                        . . . . . . . . . ." line222="                        . . . . . . . . . ." line223="                        . . . . . . . . . ." line224="                        . . . . . . . . . ." line225="                        . . . . . . . . . ." line226="                        . . . . . . . . . ." line227="                        . . . . . . . . . ." line228="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed,sprites.dungeon.hazardLava1,sprites.builtin.coral0], TileScale.Sixteen))" line229="                    break;" line230="                case 8:" line231="                    let L8random = randint(0, 3)" line232="                    switch (L8random){" line233="                        case 0:" line234="                        tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101010101010101010101010101010101010101010102010101010101010101000101010101010101010301010101010101010101010101010101010101010101010101`, img`" line235="                            . . . . . . . . . ." line236="                            . . . . . . . . . ." line237="                            . . . . . . . . . ." line238="                            . . . . . . . . . ." line239="                            . . . . . . . . . ." line240="                            . . . . . . . . . ." line241="                            . . . . . . . . . ." line242="                            . . . . . . . . . ." line243="                        `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.buttonTealDepressed,sprites.dungeon.collectibleInsignia], TileScale.Sixteen))" line244="                        break;" line245="                        case 1:" line246="                        tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101010101010101010101010101010101010101010102000301010101010101010101010101010101010101010101010101010101010101010101010101010101010101`, img`" line247="                            . . . . . . . . . ." line248="                            . . . . . . . . . ." line249="                            . . . . . . . . . ." line250="                            . . . . . . . . . ." line251="                            . . . . . . . . . ." line252="                            . . . . . . . . . ." line253="                            . . . . . . . . . ." line254="                            . . . . . . . . . ." line255="                        `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.buttonTealDepressed,sprites.dungeon.collectibleInsignia], TileScale.Sixteen))" line256="                        break;" line257="                        case 2:" line258="                        tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101030101010101010101010001010101010101010102010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101`, img`" line259="                            . . . . . . . . . ." line260="                            . . . . . . . . . ." line261="                            . . . . . . . . . ." line262="                            . . . . . . . . . ." line263="                            . . . . . . . . . ." line264="                            . . . . . . . . . ." line265="                            . . . . . . . . . ." line266="                            . . . . . . . . . ." line267="                        `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.buttonTealDepressed,sprites.dungeon.collectibleInsignia], TileScale.Sixteen))" line268="                        break;" line269="                        case 3:" line270="                        tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101010101010101010101010101010101010101010101030002010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101`, img`" line271="                            . . . . . . . . . ." line272="                            . . . . . . . . . ." line273="                            . . . . . . . . . ." line274="                            . . . . . . . . . ." line275="                            . . . . . . . . . ." line276="                            . . . . . . . . . ." line277="                            . . . . . . . . . ." line278="                            . . . . . . . . . ." line279="                        `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.buttonTealDepressed,sprites.dungeon.collectibleInsignia], TileScale.Sixteen))" line280="                        break;" line281="                    }" line282="                    break;" line283="                case 7:" line284="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101030000000100000001010101010001000100010100000000000001000101000101010101000001010000010201010100010100000100000000000101010101010101010101`, img`" line285="                        . . . . . . . . . ." line286="                        . . . . . . . . . ." line287="                        . . . . . . . . . ." line288="                        . . . . . . . . . ." line289="                        . . . . . . . . . ." line290="                        . . . . . . . . . ." line291="                        . . . . . . . . . ." line292="                        . . . . . . . . . ." line293="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed], TileScale.Sixteen))" line294="                    break;                   " line295="                case 9:" line296="                    tiles.setTilemap(tiles.createTilemap(hex`0a0008000101010101010101010101030000000104040401010101010501040104010104040005050501040101040101010101000401010505010201010104010100000105050500000101010101010101010101`, img`" line297="                        . . . . . . . . . ." line298="                        . . . . . . . . . ." line299="                        . . . . . . . . . ." line300="                        . . . . . . . . . ." line301="                        . . . . . . . . . ." line302="                        . . . . . . . . . ." line303="                        . . . . . . . . . ." line304="                        . . . . . . . . . ." line305="                    `, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.dungeon.buttonTealDepressed,sprites.builtin.coral0,sprites.dungeon.hazardLava1], TileScale.Sixteen))" line306="                    break;  " line307="                    " line308="&#9;&#9;&#9;}    " line309="}" line310="" line311="" line312="//变量声明" line313="let gem: Sprite = null" line314="let gemsHero: Sprite = null" line315="let heroDirection = 0" line316="let gemsNum = 0 " line317="let level = 1" line318="let heroRow = 0" line319="let heroCol = 0" line320="heroDirection = 0" line321="export enum turnDirection{" line322="    left," line323="    right" line324="    }" line325="export enum wallDirection{" line326="    left," line327="    right," line328="    front" line329="    }" line330="export enum magicKind{" line331="    fire ," line332="    ice" line333="}" line334="export enum obastaleKind{" line335="    lava ," line336="    plant" line337="}" line338="export let frontOfHero ={" line339="    //行" line340="    row:0," line341="    //列" line342="    col:0" line343="}" line344="" line345="" line346="//获取角色前方" line347="function getTheFrontOfHero():any{" line348="let addRow = 0" line349="let addCol = 0" line350=" if (heroDirection == 3) {" line351="        addCol += 1" line352="    } else if (heroDirection == 0) {" line353="        addRow += 1" line354="    } else if (heroDirection == 1) {" line355="        addCol += -1" line356="    } else if (heroDirection == 2) {" line357="        addRow += -1" line358="    }" line359="" line360="frontOfHero.row = heroRow+addRow" line361="frontOfHero.col = heroCol+addCol" line362="return frontOfHero" line363="}" line364="" line365="" line366="//初始化" line367="//%block" line368="//%group=&quot;Operate&quot;" line369="export function initGame(){ " line370="    gemsHero = sprites.create(img`" line371="    . . . . . . f f f f . . . . . ." line372="    . . . . f f f 2 2 f f f . . . ." line373="    . . . f f f 2 2 2 2 f f f . . ." line374="    . . f f f e e e e e e f f f . ." line375="    . . f f e 2 2 2 2 2 2 e e f . ." line376="    . . f e 2 f f f f f f 2 e f . ." line377="    . . f f f f e e e e f f f f . ." line378="    . f f e f b f 4 4 f b f e f f ." line379="    . f e e 4 1 f d d f 1 4 e e f ." line380="    . . f e e d d d d d d e e f . ." line381="    . . . f e e 4 4 4 4 e e f . . ." line382="    . . e 4 f 2 2 2 2 2 2 f 4 e . ." line383="    . . 4 d f 2 2 2 2 2 2 f d 4 . ." line384="    . . 4 4 f 4 4 5 5 4 4 f 4 4 . ." line385="    . . . . . f f f f f f . . . . ." line386="    . . . . . f f . . f f . . . . ." line387="`, SpriteKind.gemsPlayer)" line388="    level = game.askForNumber(&quot;set level(1-9)&quot;)" line389="    levelset(level)" line390="    tiles.placeOnRandomTile(gemsHero, img`" line391="        b b b b b b b b b b b b b b b b" line392="        b c b b b b b b b b b b b b c b" line393="        b b b c 6 6 6 6 6 6 6 6 c b b b" line394="        b b c 6 6 6 6 6 6 6 6 6 6 c b b" line395="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line396="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line397="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line398="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line399="        b b 6 6 6 6 6 6 6 6 6 6 6 6 b b" line400="        b b 9 6 6 6 6 6 6 6 6 6 6 9 b b" line401="        b b 9 6 6 6 6 6 6 6 6 6 6 9 b b" line402="        b b 6 9 6 6 6 6 6 6 6 6 9 6 b b" line403="        b b c 6 9 9 9 9 9 9 9 9 6 c b b" line404="        b b b c c c c c c c c c c b b b" line405="        b c b b b b b b b b b b b b c b" line406="        b b b b b b b b b b b b b b b b" line407="    `)" line408="    pause(500)" line409="    for (let 值 of tiles.getTilesByType(sprites.dungeon.collectibleInsignia)) {" line410="        gem = sprites.create(img`" line411="            . . . . . . . . . . . . . . . ." line412="            . . . . . . 4 4 4 4 . . . . . ." line413="            . . . . 4 4 4 5 5 4 4 4 . . . ." line414="            . . . 3 3 3 3 4 4 4 4 4 4 . . ." line415="            . . 4 3 3 3 3 2 2 2 1 1 4 4 . ." line416="            . . 3 3 3 3 3 2 2 2 1 1 5 4 . ." line417="            . 4 3 3 3 3 2 2 2 2 2 5 5 4 4 ." line418="            . 4 3 3 3 2 2 2 4 4 4 4 5 4 4 ." line419="            . 4 4 3 3 2 2 4 4 4 4 4 4 4 4 ." line420="            . 4 2 3 3 2 2 4 4 4 4 4 4 4 4 ." line421="            . . 4 2 3 3 2 4 4 4 4 4 2 4 . ." line422="            . . 4 2 2 3 2 2 4 4 4 2 4 4 . ." line423="            . . . 4 2 2 2 2 2 2 2 2 4 . . ." line424="            . . . . 4 4 2 2 2 2 4 4 . . . ." line425="            . . . . . . 4 4 4 4 . . . . . ." line426="            . . . . . . . . . . . . . . . ." line427="        `, SpriteKind.gemsKind)" line428="        tiles.placeOnTile(gem, 值)" line429="        gemsNum+=1" line430="        info.player1.setScore(gemsNum)" line431="    }" line432="    gemsHero.z = 1000" line433="    heroRow = gemsHero.y/16-0.5" line434="    heroCol = gemsHero.x/16-0.5" line435="    gemsHero.say(&quot;改程序前，先画流程图&quot;,3000)" line436="    getTheFrontOfHero()" line437="}" line438="" line439="//获得宝石" line440="//%block" line441="//%group=&quot;Operate&quot;" line442="export function takeGems(){" line443="    gemsHero.setKind(SpriteKind.getGemsKind)" line444="    pause(100)" line445="    music.baDing.play()" line446="    gemsHero.setFlag(SpriteFlag.Ghost, true)" line447="    gemsHero.y-=5" line448="    pause(100)" line449="    gemsHero.setKind(SpriteKind.gemsPlayer)" line450="    gemsHero.setFlag(SpriteFlag.Ghost, false)" line451="    gemsHero.y+=5" line452="    if(gemsNum==0){" line453="        game.over(true)" line454="    }" line455="}" line456="" line457="" line458="//施法" line459="function actionOfMagic(isIceMagic:boolean){" line460="" line461="    if(isIceMagic){" line462="        let magicCube = sprites.create(img`" line463="            . . . . . . . . . . . . . . . ." line464="            . . . . . . . . . . . . . . . ." line465="            . . . . . . . . . . . . . . . ." line466="            . . . . . . . . . . . . . . . ." line467="            . . . . . . . . . . . . . . . ." line468="            . . . . 8 8 8 8 8 8 8 . . . . ." line469="            . . . . 8 1 1 1 1 1 8 . . . . ." line470="            . . . . 8 1 1 1 1 1 8 . . . . ." line471="            . . . . 8 1 1 9 1 1 8 . . . . ." line472="            . . . . 8 1 1 1 1 1 8 . . . . ." line473="            . . . . 8 1 1 1 1 1 8 . . . . ." line474="            . . . . 8 8 8 8 8 8 8 . . . . ." line475="            . . . . . . . . . . . . . . . ." line476="            . . . . . . . . . . . . . . . ." line477="            . . . . . . . . . . . . . . . ." line478="            . . . . . . . . . . . . . . . ." line479="        `,SpriteKind.iceMagic)" line480="        tiles.placeOnTile(magicCube, tiles.getTileLocation(frontOfHero.col, frontOfHero.row))" line481="        pause(500)" line482="        magicCube.destroy(effects.coolRadial,500)" line483="    }" line484="    else{" line485="        let magicCube2 = sprites.create(img`" line486="            . . . . . . . . . . . . . . . ." line487="            . . . . . . . . . . . . . . . ." line488="            . . . . . . . . . . . . . . . ." line489="            . . . . . . . . . . . . . . . ." line490="            . . . . . . . . . . . . . . . ." line491="            . . . . 2 2 2 2 2 2 2 . . . . ." line492="            . . . . 2 5 5 5 5 5 2 . . . . ." line493="            . . . . 2 5 5 5 5 5 2 . . . . ." line494="            . . . . 2 5 5 4 5 5 2 . . . . ." line495="            . . . . 2 5 5 5 5 5 2 . . . . ." line496="            . . . . 2 5 5 5 5 5 2 . . . . ." line497="            . . . . 2 2 2 2 2 2 2 . . . . ." line498="            . . . . . . . . . . . . . . . ." line499="            . . . . . . . . . . . . . . . ." line500="            . . . . . . . . . . . . . . . ." line501="            . . . . . . . . . . . . . . . ." line502="        `,SpriteKind.fireMagic)" line503="        tiles.placeOnTile(magicCube2, tiles.getTileLocation(frontOfHero.col, frontOfHero.row))" line504="        pause(500)" line505="        magicCube2.destroy(effects.fire,500)" line506="    }" line507="}" line508="//使用魔法" line509="//%block=&quot;use %magicKind magic&quot;" line510="//%group=&quot;Operate&quot;" line511="export function useMagic(choice:magicKind){" line512="    getTheFrontOfHero()" line513="    switch(choice){" line514="        case magicKind.ice:" line515="        if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line516="            5 4 4 5 5 4 4 4 4 2 2 2 4 4 4 4" line517="            4 4 4 4 4 5 5 4 2 2 2 2 4 4 4 5" line518="            4 2 2 2 4 4 5 4 2 2 4 4 5 5 5 5" line519="            2 2 4 2 4 4 5 4 2 2 4 5 5 5 5 4" line520="            2 2 2 2 4 4 5 4 2 2 4 4 5 5 4 4" line521="            4 2 2 2 4 5 5 4 4 4 4 4 4 4 4 2" line522="            2 2 2 4 4 5 5 5 4 4 2 2 2 2 2 2" line523="            4 2 2 4 5 5 5 5 4 2 2 4 2 2 2 4" line524="            5 4 4 4 4 4 4 5 5 4 2 2 2 4 4 4" line525="            4 4 4 2 2 2 4 4 5 5 4 4 4 4 5 5" line526="            4 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5" line527="            5 4 4 2 4 2 2 4 4 5 5 5 4 4 4 5" line528="            5 5 4 2 2 2 4 4 4 5 5 4 2 2 2 4" line529="            4 5 4 4 4 4 5 5 5 5 4 2 4 2 2 4" line530="            4 5 5 5 5 5 5 4 4 4 2 4 2 4 2 4" line531="            4 5 5 5 4 4 4 4 2 2 2 2 4 2 4 4" line532="        `)){    " line533="            actionOfMagic(true)" line534="        }" line535="        else{" line536="            gemsHero.say(&quot;There is not hot lava need to be frozen!&quot;)" line537="        }" line538="        break" line539="        default:" line540="        if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line541="            . . . . . . c c . . . . . c c ." line542="            . . . c c . c 3 c . c c . c 3 c" line543="            . . c 3 6 c 3 3 c . c 3 c 6 3 c" line544="            . . c 3 3 3 3 6 c . c 3 6 3 3 c" line545="            . . . c 6 3 6 6 c c c 3 3 3 c ." line546="            . . . . c c 6 6 c 6 c 6 3 3 c ." line547="            . . . . c 3 c 6 c 3 3 c 6 6 c ." line548="            c c . c 3 3 c c c c 3 3 c 6 c ." line549="            c 3 c c 3 6 6 c 3 c 3 6 c 6 c ." line550="            c 3 3 6 3 6 3 6 3 3 3 c c c c c" line551="            . c 3 3 3 c 3 3 6 3 6 c c 3 3 c" line552="            . . c 3 3 c c 3 3 3 6 c 3 3 6 ." line553="            c c c 6 3 6 c c 6 3 6 6 3 6 c c" line554="            c 3 3 3 3 3 c c c 3 6 3 3 3 3 c" line555="            . c c 6 6 3 6 6 c 6 3 3 6 c c ." line556="            . . . c 6 3 3 6 6 6 6 3 c . . ." line557="        `)){    " line558="            actionOfMagic(false)" line559="        }else{" line560="            gemsHero.say(&quot;There is not poison plant need to be fired!&quot;)" line561="        }" line562="        break" line563="    }" line564="}" line565="    //判断前方障碍物" line566="    //%block=&quot;there is %obstaleKind ahead&quot;" line567="    //%group=&quot;Others&quot;" line568="    export function isObastaleAhead(choice:obastaleKind): boolean {" line569="        getTheFrontOfHero()" line570="        if(choice == obastaleKind.lava){" line571="            if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line572="                5 4 4 5 5 4 4 4 4 2 2 2 4 4 4 4" line573="                4 4 4 4 4 5 5 4 2 2 2 2 4 4 4 5" line574="                4 2 2 2 4 4 5 4 2 2 4 4 5 5 5 5" line575="                2 2 4 2 4 4 5 4 2 2 4 5 5 5 5 4" line576="                2 2 2 2 4 4 5 4 2 2 4 4 5 5 4 4" line577="                4 2 2 2 4 5 5 4 4 4 4 4 4 4 4 2" line578="                2 2 2 4 4 5 5 5 4 4 2 2 2 2 2 2" line579="                4 2 2 4 5 5 5 5 4 2 2 4 2 2 2 4" line580="                5 4 4 4 4 4 4 5 5 4 2 2 2 4 4 4" line581="                4 4 4 2 2 2 4 4 5 5 4 4 4 4 5 5" line582="                4 2 2 2 2 2 2 2 4 5 5 5 5 5 5 5" line583="                5 4 4 2 4 2 2 4 4 5 5 5 4 4 4 5" line584="                5 5 4 2 2 2 4 4 4 5 5 4 2 2 2 4" line585="                4 5 4 4 4 4 5 5 5 5 4 2 4 2 2 4" line586="                4 5 5 5 5 5 5 4 4 4 2 4 2 4 2 4" line587="                4 5 5 5 4 4 4 4 2 2 2 2 4 2 4 4" line588="            `)){return true}return false}" line589="        else{if(tiles.tileAtLocationEquals(tiles.getTileLocation(frontOfHero.col, frontOfHero.row), img`" line590="            . . . . . . c c . . . . . c c ." line591="            . . . c c . c 3 c . c c . c 3 c" line592="            . . c 3 6 c 3 3 c . c 3 c 6 3 c" line593="            . . c 3 3 3 3 6 c . c 3 6 3 3 c" line594="            . . . c 6 3 6 6 c c c 3 3 3 c ." line595="            . . . . c c 6 6 c 6 c 6 3 3 c ." line596="            . . . . c 3 c 6 c 3 3 c 6 6 c ." line597="            c c . c 3 3 c c c c 3 3 c 6 c ." line598="            c 3 c c 3 6 6 c 3 c 3 6 c 6 c ." line599="            c 3 3 6 3 6 3 6 3 3 3 c c c c c" line600="            . c 3 3 3 c 3 3 6 3 6 c c 3 3 c" line601="            . . c 3 3 c c 3 3 3 6 c 3 3 6 ." line602="            c c c 6 3 6 c c 6 3 6 6 3 6 c c" line603="            c 3 3 3 3 3 c c c 3 6 3 3 3 3 c" line604="            . c c 6 6 3 6 6 c 6 3 3 6 c c ." line605="            . . . c 6 3 3 6 6 6 6 3 c . . ." line606="        `)){return true}return false}" line607="    }" line608="    //判断周围是否有墙 0下  1左  2上  3右" line609="    //%block=&quot;there is a wall on %wallDirection&quot;" line610="    //%group=&quot;Others&quot;" line611="    export function isThereAWallOn(choice:wallDirection): boolean {" line612="        getTheFrontOfHero()" line613="        let frontCol = 0" line614="        let frontRow = 0" line615="        let leftCol = 0" line616="        let leftRow = 0" line617="        let rightCol =0" line618="        let rightRow = 0" line619="        switch(heroDirection){" line620="            case 0:" line621="            frontRow+=1" line622="            leftCol+=1" line623="            rightCol+=-1" line624="            break" line625="            case 1:" line626="            frontCol+=-1" line627="            leftRow+=1" line628="            rightRow+=-1" line629="            break" line630="            case 2:" line631="            frontRow+=-1" line632="            leftCol+=-1" line633="            rightCol+=1" line634="            break" line635="            case 3:" line636="            frontCol+=1" line637="            leftRow+=-1" line638="            rightRow+=1" line639="            break" line640="" line641="        }" line642="        switch(choice){" line643="            case wallDirection.front:" line644="                if(tiles.tileAtLocationEquals(tiles.getTileLocation(heroCol+frontCol, heroRow+frontRow), img`" line645="                . . . 6 6 6 6 6 6 6 6 6 6 . . ." line646="                . 6 6 7 7 7 7 7 7 7 7 7 7 6 6 ." line647="                . 6 7 7 7 7 7 7 7 7 7 7 7 7 6 ." line648="                6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6" line649="                6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6" line650="                6 7 6 7 7 7 7 7 7 7 7 7 7 6 7 6" line651="                8 6 7 7 7 7 7 7 7 7 7 7 7 7 6 8" line652="                8 7 7 7 7 7 7 7 7 7 7 7 7 7 7 8" line653="                6 7 6 7 7 7 6 7 7 7 7 6 7 7 7 6" line654="                6 8 6 7 7 6 7 7 7 6 7 7 6 6 8 6" line655="                8 6 6 7 6 6 7 7 6 6 6 7 6 6 6 8" line656="                8 6 8 6 6 6 7 6 6 6 6 6 8 6 6 8" line657="                8 8 6 6 8 6 6 6 8 6 6 6 8 8 8 8" line658="                . f 6 e e 8 6 6 8 8 6 8 8 8 f ." line659="                . . f e e e 6 e 8 8 f f 8 f . ." line660="                . . . f f f 8 e e f f f f . . ." line661="                `)){return true}return false" line662="            break" line663="            case wallDirection.right:" line664="                if(tiles.tileAtLocationEquals(tiles.getTileLocation(heroCol+rightCol, heroRow+rightRow), img`" line665="                    . . . 6 6 6 6 6 6 6 6 6 6 . . ." line666="                    . 6 6 7 7 7 7 7 7 7 7 7 7 6 6 ." line667="                    . 6 7 7 7 7 7 7 7 7 7 7 7 7 6 ." line668="                    6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6" line669="                    6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6" line670="                    6 7 6 7 7 7 7 7 7 7 7 7 7 6 7 6" line671="                    8 6 7 7 7 7 7 7 7 7 7 7 7 7 6 8" line672="                    8 7 7 7 7 7 7 7 7 7 7 7 7 7 7 8" line673="                    6 7 6 7 7 7 6 7 7 7 7 6 7 7 7 6" line674="                    6 8 6 7 7 6 7 7 7 6 7 7 6 6 8 6" line675="                    8 6 6 7 6 6 7 7 6 6 6 7 6 6 6 8" line676="                    8 6 8 6 6 6 7 6 6 6 6 6 8 6 6 8" line677="                    8 8 6 6 8 6 6 6 8 6 6 6 8 8 8 8" line678="                    . f 6 e e 8 6 6 8 8 6 8 8 8 f ." line679="                    . . f e e e 6 e 8 8 f f 8 f . ." line680="                    . . . f f f 8 e e f f f f . . ." line681="                `)){return true}return false" line682="            break" line683="            case wallDirection.left:" line684="                if(tiles.tileAtLocationEquals(tiles.getTileLocation(heroCol+leftCol, heroRow+leftRow), img`" line685="                . . . 6 6 6 6 6 6 6 6 6 6 . . ." line686="                . 6 6 7 7 7 7 7 7 7 7 7 7 6 6 ." line687="                . 6 7 7 7 7 7 7 7 7 7 7 7 7 6 ." line688="                6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6" line689="                6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6" line690="                6 7 6 7 7 7 7 7 7 7 7 7 7 6 7 6" line691="                8 6 7 7 7 7 7 7 7 7 7 7 7 7 6 8" line692="                8 7 7 7 7 7 7 7 7 7 7 7 7 7 7 8" line693="                6 7 6 7 7 7 6 7 7 7 7 6 7 7 7 6" line694="                6 8 6 7 7 6 7 7 7 6 7 7 6 6 8 6" line695="                8 6 6 7 6 6 7 7 6 6 6 7 6 6 6 8" line696="                8 6 8 6 6 6 7 6 6 6 6 6 8 6 6 8" line697="                8 8 6 6 8 6 6 6 8 6 6 6 8 8 8 8" line698="                . f 6 e e 8 6 6 8 8 6 8 8 8 f ." line699="                . . f e e e 6 e 8 8 f f 8 f . ." line700="                . . . f f f 8 e e f f f f . . ." line701="                `)){return true}return false" line702="            break" line703="        }" line704="        " line705="    " line706="    }" line707="        " line708="            " line709="    " line710="" line711="    //转向" line712="    //%block=&quot;turn %turnDirection&quot;" line713="    //%group=&quot;Move&quot;" line714="    export function turn (choice: turnDirection) {" line715="    switch(choice){" line716="        case turnDirection.right:" line717="        heroDirection += 1" line718="        heroDirection = heroDirection % 4" line719="        break" line720="        default :" line721="        heroDirection += 3" line722="        heroDirection = heroDirection % 4" line723="        break" line724="    }" line725="    if (heroDirection == 3) {//向右" line726="        gemsHero.setImage(img`" line727="            . . . . . . f f f f f f . . . ." line728="            . . . . f f e e e e f 2 f . . ." line729="            . . . f f e e e e f 2 2 2 f . ." line730="            . . . f e e e f f e e e e f . ." line731="            . . . f f f f e e 2 2 2 2 e f ." line732="            . . . f e 2 2 2 f f f f e 2 f ." line733="            . . f f f f f f f e e e f f f ." line734="            . . f f e 4 4 e b f 4 4 e e f ." line735="            . . f e e 4 d 4 1 f d d e f . ." line736="            . . . f e e e 4 d d d d f . . ." line737="            . . . . f f e e 4 4 4 e f . . ." line738="            . . . . . 4 d d e 2 2 2 f . . ." line739="            . . . . . e d d e 2 2 2 f . . ." line740="            . . . . . f e e f 4 5 5 f . . ." line741="            . . . . . . f f f f f f . . . ." line742="            . . . . . . . f f f . . . . . ." line743="        `)" line744="    } else if (heroDirection == 0) {//向下" line745="        gemsHero.setImage(img`" line746="            . . . . . . f f f f . . . . . ." line747="            . . . . f f f 2 2 f f f . . . ." line748="            . . . f f f 2 2 2 2 f f f . . ." line749="            . . f f f e e e e e e f f f . ." line750="            . . f f e 2 2 2 2 2 2 e e f . ." line751="            . . f e 2 f f f f f f 2 e f . ." line752="            . . f f f f e e e e f f f f . ." line753="            . f f e f b f 4 4 f b f e f f ." line754="            . f e e 4 1 f d d f 1 4 e e f ." line755="            . . f e e d d d d d d e e f . ." line756="            . . . f e e 4 4 4 4 e e f . . ." line757="            . . e 4 f 2 2 2 2 2 2 f 4 e . ." line758="            . . 4 d f 2 2 2 2 2 2 f d 4 . ." line759="            . . 4 4 f 4 4 5 5 4 4 f 4 4 . ." line760="            . . . . . f f f f f f . . . . ." line761="            . . . . . f f . . f f . . . . ." line762="        `)" line763="    } else if (heroDirection == 1) {//向左" line764="        gemsHero.setImage(img`" line765="            . . . . f f f f f f . . . . . ." line766="            . . . f 2 f e e e e f f . . . ." line767="            . . f 2 2 2 f e e e e f f . . ." line768="            . . f e e e e f f e e e f . . ." line769="            . f e 2 2 2 2 e e f f f f . . ." line770="            . f 2 e f f f f 2 2 2 e f . . ." line771="            . f f f e e e f f f f f f f . ." line772="            . f e e 4 4 f b e 4 4 e f f . ." line773="            . . f e d d f 1 4 d 4 e e f . ." line774="            . . . f d d d d 4 e e e f . . ." line775="            . . . f e 4 4 4 e e f f . . . ." line776="            . . . f 2 2 2 e d d 4 . . . . ." line777="            . . . f 2 2 2 e d d e . . . . ." line778="            . . . f 5 5 4 f e e f . . . . ." line779="            . . . . f f f f f f . . . . . ." line780="            . . . . . . f f f . . . . . . ." line781="        `)" line782="    } else if (heroDirection == 2) {//向上" line783="        gemsHero.setImage(img`" line784="            . . . . . . f f f f . . . . . ." line785="            . . . . f f e e e e f f . . . ." line786="            . . . f e e e f f e e e f . . ." line787="            . . f f f f f 2 2 f f f f f . ." line788="            . . f f e 2 e 2 2 e 2 e f f . ." line789="            . . f e 2 f 2 f f 2 f 2 e f . ." line790="            . . f f f 2 2 e e 2 2 f f f . ." line791="            . f f e f 2 f e e f 2 f e f f ." line792="            . f e e f f e e e e f e e e f ." line793="            . . f e e e e e e e e e e f . ." line794="            . . . f e e e e e e e e f . . ." line795="            . . e 4 f f f f f f f f 4 e . ." line796="            . . 4 d f 2 2 2 2 2 2 f d 4 . ." line797="            . . 4 4 f 4 4 4 4 4 4 f 4 4 . ." line798="            . . . . . f f f f f f . . . . ." line799="            . . . . . f f . . f f . . . . ." line800="        `)" line801="    }" line802="    pause(500)" line803="}" line804="    //前进" line805="    //%block" line806="    //%group=&quot;Move&quot;" line807="    export function stepForward () {" line808="    if (heroDirection == 3) {" line809="        heroCol += 1" line810="    } else if (heroDirection == 0) {" line811="        heroRow += 1" line812="    } else if (heroDirection == 1) {" line813="        heroCol += -1" line814="    } else if (heroDirection == 2) {" line815="        heroRow += -1" line816="    }" line817="    tiles.placeOnTile(gemsHero, tiles.getTileLocation(heroCol, heroRow))" line818="    pause(500)" line819="}" line820="" line821="" line822="}" numlines="823"></mutation></block></statement></block></xml>